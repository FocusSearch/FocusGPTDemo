(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[12],{

/***/ "../src-v5/assets/js/charts.components/ContainerComponent.js":
/*!*******************************************************************!*\
  !*** ../src-v5/assets/js/charts.components/ContainerComponent.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// 画图形容器的组件\nlet ContainerComponent = {\n  /**\r\n   * 画图形的容器，只需要区分图例部分与图形部分[图形内部自己画X轴Y轴标题及图形]\r\n   * @param options\r\n   *          {\r\n   *              container           -   [ *必填项 ]画图容器DOM\r\n   *              legendPosition      -   图例位置[默认没有图例]  top / right / left / bottom\r\n   *              needCanvasFlag      -   是否需要canvas标签的标志\r\n   *          }\r\n   * @return 在container中插入图形区域 及 图例区域\r\n   *          {\r\n   *              svgContainer    -   包裹svg元素的div容器\r\n   *              svgJqDom        -   SVG的DOM元素\r\n   *              canvasJqDom     -   Canvas的DOM元素\r\n   *              legendContainer -   包裹图例的div容器\r\n   *          }\r\n   * */\n  drawCommonContainer: function (options) {\n    options = options || {};\n    if (!options.container) return false;\n    const getChartContent = container => {\n      const existedChartContent = container.querySelector('.chart-content');\n      if (existedChartContent) {\n        return existedChartContent;\n      }\n      const newChartContent = document.createElement('div');\n      newChartContent.classList.add('chart-content');\n      return newChartContent;\n    };\n    const getLegendContent = chartContent => {\n      const existedLegendContent = chartContent.querySelector('.legend-content');\n      if (options.legendPosition) {\n        if (existedLegendContent) return existedLegendContent;\n        const newLegendContent = document.createElement('div');\n        newLegendContent.classList.add('legend-content');\n        return newLegendContent;\n      } else {\n        if (existedLegendContent) existedLegendContent.remove();\n        return null;\n      }\n    };\n    const getSvgContent = chartContent => {\n      const existedSvgContent = chartContent.querySelector('.svg-content');\n      // 每次重新生成元素时，将临时回退元素清除\n      if (existedSvgContent) {\n        let theReturnDom = existedSvgContent.querySelector('.select-return-dom');\n        if (theReturnDom) theReturnDom.remove();\n        return existedSvgContent;\n      }\n      const newSvgContent = document.createElement('div');\n      newSvgContent.classList.add('svg-content');\n      return newSvgContent;\n    };\n    const getSvgDom = svgContent => {\n      const existedSvgDom = svgContent.querySelector('.svg-dom');\n      if (existedSvgDom) {\n        return existedSvgDom;\n      }\n      const newSvgDom = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n      newSvgDom.classList.add('svg-dom');\n      return newSvgDom;\n    };\n    const getCanvasDom = svgContent => {\n      const existedCanvasDom = svgContent.querySelector('.canvas-dom');\n      if (options.needCanvasFlag) {\n        if (existedCanvasDom) return existedCanvasDom;\n        const newCanvasDom = document.createElement('canvas');\n        newCanvasDom.classList.add('canvas-dom');\n        return newCanvasDom;\n      } else {\n        if (existedCanvasDom) existedCanvasDom.remove();\n        return null;\n      }\n    };\n    const updateContainerLayout = (container, legendPosition) => {\n      const chartContent = getChartContent(container);\n      const legendContent = getLegendContent(chartContent);\n      const svgContent = getSvgContent(chartContent);\n      const svgDom = getSvgDom(svgContent);\n      const canvasDom = getCanvasDom(svgContent);\n      switch (legendPosition) {\n        case \"top\":\n          chartContent.style.cssText = 'display: flex;flex-direction: column;justify-content: center;align-items: center;width:100%;height:100%;';\n          legendContent.style.cssText = 'display:flex;flex-direction:row;width:100%;';\n          svgContent.style.cssText = 'position:relative;flex:1;flex-grow:1;width:100%;height: 0;';\n          svgDom.style.cssText = 'width:100%;height:100%;';\n          canvasDom && (canvasDom.style.cssText = 'position:absolute;width:100%;height:100%;top:0;left:0;');\n          svgContent.appendChild(svgDom);\n          canvasDom && svgContent.appendChild(canvasDom);\n          chartContent.appendChild(legendContent);\n          chartContent.appendChild(svgContent);\n          break;\n        case \"bottom\":\n          chartContent.style.cssText = 'display: flex;flex-direction: column;justify-content: center;align-items: center;width:100%;height:100%;';\n          legendContent.style.cssText = 'display:flex;flex-direction:row;width:100%;';\n          svgContent.style.cssText = 'position:relative;flex:1;flex-grow:1;width:100%;height: 0;';\n          svgDom.style.cssText = 'width:100%;height:100%;';\n          canvasDom && (canvasDom.style.cssText = 'position:absolute;width:100%;height:100%;top:0;left:0;');\n          svgContent.appendChild(svgDom);\n          canvasDom && svgContent.appendChild(canvasDom);\n          chartContent.appendChild(svgContent);\n          chartContent.appendChild(legendContent);\n          break;\n        case \"right\":\n          chartContent.style.cssText = 'display: flex;flex-direction: row;justify-content: center;align-items: center;width:100%;height:100%;';\n          legendContent.style.cssText = 'display:flex;flex-direction:column;height:100%;';\n          svgContent.style.cssText = 'position:relative;flex:1;flex-grow:1;height:100%;';\n          svgDom.style.cssText = 'width:100%;height:100%;';\n          canvasDom && (canvasDom.style.cssText = 'position:absolute;width:100%;height:100%;top:0;left:0;');\n          svgContent.appendChild(svgDom);\n          canvasDom && svgContent.appendChild(canvasDom);\n          chartContent.appendChild(svgContent);\n          chartContent.appendChild(legendContent);\n          break;\n        case \"left\":\n          chartContent.style.cssText = 'display: flex;flex-direction: row;justify-content: center;align-items: center;width:100%;height:100%;';\n          legendContent.style.cssText = 'height:100%;';\n          svgContent.style.cssText = 'position:relative;flex:1;flex-grow:1;height:100%;';\n          svgDom.style.cssText = 'width:100%;height:100%;';\n          canvasDom && (canvasDom.style.cssText = 'position:absolute;width:100%;height:100%;top:0;left:0;');\n          svgContent.appendChild(svgDom);\n          canvasDom && svgContent.appendChild(canvasDom);\n          chartContent.appendChild(legendContent);\n          chartContent.appendChild(svgContent);\n          break;\n        case \"rightTop\":\n          // 图例在右上角\n          chartContent.style.cssText = 'display: flex;flex-direction: row;justify-content: center;align-items: center;width:100%;height:100%;';\n          legendContent.style.cssText = 'position:absolute;right:0;top:0;z-index:1;';\n          svgContent.style.cssText = 'position:relative;flex:1;flex-grow:1;width:100%;height:100%;';\n          svgDom.style.cssText = 'width:100%;height:100%;';\n          canvasDom && (canvasDom.style.cssText = 'position:absolute;width:100%;height:100%;top:0;left:0;');\n          svgContent.appendChild(svgDom);\n          canvasDom && svgContent.appendChild(canvasDom);\n          chartContent.appendChild(legendContent);\n          chartContent.appendChild(svgContent);\n          break;\n        default:\n          // 无图例的部分\n          chartContent.style.cssText = 'display: flex;flex-direction: row;justify-content: center;align-items: center;width:100%;height:100%;';\n          // legendContent.style.cssText = 'position:absolute;right:0;top:0;z-index:1;';\n          svgContent.style.cssText = 'position:relative;flex:1;flex-grow:1;width:100%;height:100%;';\n          svgDom.style.cssText = 'width:100%;height:100%;';\n          canvasDom && (canvasDom.style.cssText = 'position:absolute;width:100%;height:100%;top:0;left:0;');\n          svgContent.appendChild(svgDom);\n          canvasDom && svgContent.appendChild(canvasDom);\n\n          // chartContent.appendChild(legendContent);\n          chartContent.appendChild(svgContent);\n      }\n\n      // 最后插入减少浏览器重绘\n      options.container.innerHTML = '';\n      options.container.appendChild(chartContent);\n      return {\n        chartContent,\n        legendContent,\n        svgContent,\n        svgDom,\n        canvasDom\n      };\n    };\n    const {\n      chartContent,\n      legendContent,\n      svgContent,\n      svgDom,\n      canvasDom\n    } = updateContainerLayout(options.container, options.legendPosition);\n    return {\n      chartContainer: chartContent,\n      svgContainer: svgContent,\n      svgJqDom: svgDom,\n      canvasJqDom: canvasDom,\n      legendContainer: legendContent\n    };\n  }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (ContainerComponent);\n\n//# sourceURL=webpack:///../src-v5/assets/js/charts.components/ContainerComponent.js?");

/***/ }),

/***/ "../src-v5/assets/js/charts.system.basic/kpi/KpiChartComponent.js":
/*!************************************************************************!*\
  !*** ../src-v5/assets/js/charts.system.basic/kpi/KpiChartComponent.js ***!
  \************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  /**\n   * 依据基础宽度，计算自动的字体大小\n   * */\n  translateAutoFontSize: function (type, width) {\n    let theFontSize;\n    switch (type) {\n      case 'option_font_size_huge':\n        theFontSize = Math.max(width / 7, 40);\n        break;\n      case \"option_font_size_super\":\n        theFontSize = Math.max(width / 9, 35);\n        break;\n      case 'option_font_size_Maximum':\n        theFontSize = Math.max(width / 10, 30);\n        break;\n      case \"option_font_size_bigger\":\n        theFontSize = Math.max(width / 13, 25);\n        break;\n      case 'option_font_size_smaller':\n        theFontSize = Math.max(width / 17, 15);\n        break;\n      case 'option_font_size_Minimum':\n        theFontSize = Math.max(width / 20, 12);\n        break;\n      case 'option_default_value':\n      default:\n        theFontSize = Math.max(width / 15, 20);\n        break;\n    }\n    return theFontSize;\n  },\n  /**\n   * 依据基础宽度，计算自动的字体大小\n   * */\n  translateFontStyleLabel: function (type) {\n    let theStyleObj = {};\n    switch (type) {\n      case 'option_bold_value':\n        theStyleObj.italic = false;\n        theStyleObj.bold = true;\n        break;\n      case 'option_italic_value':\n        theStyleObj.italic = true;\n        theStyleObj.bold = false;\n        break;\n      case 'option_bold_italic_value':\n        theStyleObj.italic = true;\n        theStyleObj.bold = true;\n        break;\n      default:\n        theStyleObj.italic = false;\n        theStyleObj.bold = false;\n        break;\n    }\n    return theStyleObj;\n  }\n});\n\n//# sourceURL=webpack:///../src-v5/assets/js/charts.system.basic/kpi/KpiChartComponent.js?");

/***/ }),

/***/ "../src-v5/assets/js/charts.system.basic/kpi/systemKpiChart.js":
/*!*********************************************************************!*\
  !*** ../src-v5/assets/js/charts.system.basic/kpi/systemKpiChart.js ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function($) {/* harmony import */ var _pc_assets_js_charts_components_ContainerComponent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @pc/assets/js/charts.components/ContainerComponent */ \"../src-v5/assets/js/charts.components/ContainerComponent.js\");\n/* harmony import */ var _pc_assets_js_charts_components_CommonComponent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @pc/assets/js/charts.components/CommonComponent */ \"../src-v5/assets/js/charts.components/CommonComponent.js\");\n/* harmony import */ var _pc_assets_js_charts_system_basic_kpi_KpiChartComponent__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @pc/assets/js/charts.system.basic/kpi/KpiChartComponent */ \"../src-v5/assets/js/charts.system.basic/kpi/KpiChartComponent.js\");\n/**\r\n * 系统KPI图形组件\r\n * **/\n// 画图容器组件[ 主要区分svg部分与图例部分 ]\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  // [*必填项] 图姓唯一标识\n  chartType: \"kpi\",\n  // [*必填项] 图形名称中英文Key\n  chartDisplayNameKey: \"chart_kpi\",\n  // [*必填项] 图形描述中英文Key\n  chartDescriptionKey: \"chart_kpi_tooltip\",\n  // [*必填项] 图轴配置元素 ( X轴 ，Y轴（允许右Y轴） )\n  needAxis: {\n    xAxis: {},\n    yAxis: {\n      defaultYAxisNumber: 1\n    }\n  },\n  // [*必填项] 搜索数据是否支持该图形 ( 至少一个数值列，查询数据少于5条； 如果只有1条数据显示KPI; 如果有多条数据，轮播显示KPI )\n  isSatisfiedTheChart: function (searchResultStatistic) {\n    let satisfiedFlag = false;\n\n    // if (!searchResultStatistic || !searchResultStatistic.aggregatedFlag) return false;\n    if (!searchResultStatistic) return false;\n    if (searchResultStatistic.measureColumns.length > 0 && searchResultStatistic.queryResultCount > 0 && searchResultStatistic.queryResultCount < 5) {\n      satisfiedFlag = true;\n    }\n    return satisfiedFlag;\n  },\n  /**\r\n   * [选填] 获取当前图形各个needAxis中可选择的配置列\r\n   * @return\r\n   *      {\r\n   *          // 依据needAxis结构返回各个可选列的index\r\n   *          xAxis: [1,2,3] ,\r\n   *          yAxis: [4,5]\r\n   *      }\r\n   * */\n  getSatisfiedChartAxis: function (searchResultStatistic) {\n    let self = this; //  是当前_DataFocusChartTypes中的对象\n\n    const needAxis = self.needAxis || {};\n    if (!needAxis || !searchResultStatistic) return false;\n    let theAxisObj = {};\n    // Time / legend / xAxis / yAxis / size\n    // X轴的可选项\n    if (needAxis.xAxis) {\n      theAxisObj.xAxis = searchResultStatistic.attributeColumns && searchResultStatistic.attributeColumns.map(function (h) {\n        return h.idx;\n      });\n    }\n    // Y轴的可选项\n    if (needAxis.yAxis) {\n      theAxisObj.yAxis = searchResultStatistic.measureColumns && searchResultStatistic.measureColumns.map(function (h) {\n        return h.idx;\n      });\n    }\n    if (_DataFocusMethod.isObjEmpty(theAxisObj)) {\n      return false;\n    } else {\n      theAxisObj.name = self.name;\n      theAxisObj.type = self.name;\n      return theAxisObj;\n    }\n  },\n  /**\r\n   * [选填] 在图形没有图轴配置的情况下，从getSatisfiedChartAxis中图轴可选项中初始化画图配置\r\n   *\r\n   * 初始化规则：\r\n   * 1. 如果当前数据中有两个以上数值列，则默认X轴是数值列，Y轴是一个数值列\r\n   * 2. 如果当前数据只有一个数值列，则默认X轴是属性列，Y轴是数值列\r\n   *\r\n   * // 依据needAxis生成初始的图轴配置值，及各个轴的配置可选项\r\n   *    返回对象名字规则: 可选项是needAxis中各项名字 + Area ； 当前配置项是 cur + needAxis中各项名字\r\n   * @return chartAxis\r\n   *          {\r\n   *              xAxisArea: [  {col_id , index ...} , {} ] ,\r\n   *              curXAxis: [ {col_id , index ...} ]\r\n   *              yAxisArea: [ {col_id , index , min , max ...} , {} ] ,\r\n   *              curYAxis: [ {col_id , index , min , max ...} ] ,\r\n   *              legendArea: [ {col_id , index ...} ],\r\n   *              curLegend: {col_id , index ...} ,\r\n   *              sizeArea: [{col_id , index ...}] ,\r\n   *              curSize: {col_id , index ...} ,\r\n   *              timeArea: [ {col_id , index ...} ] ,\r\n   *              curTime: {col_id , index ...}\r\n   *          }\r\n   *\r\n   * */\n  initChartAxisConfig: function (options) {\n    options = options || {};\n    if (!options.tableData || !options.tableData.headers) return false;\n    let self = this,\n      //  是当前_DataFocusChartTypes中的对象\n      tableData = options.tableData,\n      headers = tableData.headers;\n\n    // charts是依据各个图形中的getSatisfiedChartAxis生成的\n    let theMatchedChart = tableData.charts && tableData.charts.find(function (chart) {\n        return (chart.name || chart.type) === self.name;\n      }),\n      chartAxis = {};\n    if (!theMatchedChart) {\n      console.log(\"当前数据不适合折线图\");\n      return chartAxis;\n    }\n    let getIdIndexInHeader = function (colIdx, headers) {\n      // 目前charts返回的都是索引\n      if (colIdx < headers.length) return colIdx;\n      for (let i = 0; i < headers.length; i++) {\n        if (headers[i].col_id === colIdx) return i;\n      }\n      return -1;\n    };\n\n    // 获取XAxis列及可选数组\n    if (self.needAxis && self.needAxis.xAxis) {\n      chartAxis.xAxisArea = [];\n      theMatchedChart.xAxis && theMatchedChart.xAxis.forEach(function (c) {\n        let curColumnIndex = getIdIndexInHeader(c, headers);\n        let obj = $.extend({}, headers[curColumnIndex]);\n        obj.header = headers[curColumnIndex];\n        obj.index = curColumnIndex;\n        chartAxis.xAxisArea.push(obj);\n      });\n\n      // KPI默认所有属性列作为X轴\n      chartAxis.curXAxis = chartAxis.xAxisArea.slice(0);\n    }\n\n    // 获取YAxis列及可选数组 [ 必须计算yAxis的最大值与最小值，计算刻度使用 ]\n    if (self.needAxis && self.needAxis.yAxis) {\n      chartAxis.yAxisArea = [];\n      theMatchedChart.yAxis && theMatchedChart.yAxis.forEach(function (c) {\n        let curColumnIndex = getIdIndexInHeader(c, headers);\n        let obj = $.extend({}, headers[curColumnIndex]);\n        obj.header = headers[curColumnIndex];\n        obj.index = curColumnIndex;\n        chartAxis.yAxisArea.push(obj);\n      });\n      // KPI默认配置一个Y数值列，且只允许配置一个数值列（在validateAxisConfig中控制）\n      let yAxisArea = chartAxis.yAxisArea;\n      chartAxis.curYAxis = yAxisArea.slice(0, 1);\n    }\n    return chartAxis;\n  },\n  /***\r\n   * [*必填项] 图轴配置是否合法\r\n   *      - Y轴不允许为空\r\n   *      - Y轴只允许一个数值列\r\n   * */\n  validateAxisConfig: function (theAxisConfig) {\n    let chartErrorMsg = '';\n    if (!theAxisConfig) return chartErrorMsg;\n\n    // Y轴不允许为空\n    if (!theAxisConfig.yAxis || !theAxisConfig.yAxis.length) {\n      chartErrorMsg = 'chart_modify_y_not_null';\n      return chartErrorMsg;\n    }\n\n    // Y轴只允许一个数值列\n    if (theAxisConfig.yAxis && theAxisConfig.yAxis.length > 1) {\n      chartErrorMsg = 'chart_modify_y_only_one';\n      return chartErrorMsg;\n    }\n    return chartErrorMsg;\n  },\n  // [* 必填项]画图方法\n  drawChart: function (options) {\n    options = options || {};\n    if (!options.container) {\n      console.error('DataFocus没有提供画图元素Dom');\n      return false;\n    }\n    if (!options.currentChart) {\n      console.error('DataFocus没有提供图形实例');\n      return false;\n    }\n    if (!options.chartAxis) {\n      console.error('DataFocus没有图形的配置信息');\n      return false;\n    }\n    if (!options.datas) {\n      console.error('DataFocus没有提供画图数据');\n      return false;\n    }\n    let container = options.container,\n      chartAxis = options.chartAxis,\n      currentChart = options.currentChart,\n      conf = currentChart.defaultConf || {},\n      tableData = conf.datas,\n      chartConfigures = options.chartConfigures || {};\n    container.innerHTML = '';\n    // 给柱状图初始化画图容器  SVG图形部分(X轴Y轴图形) / X轴标题(位置) / Y轴标题(位置) / 图例(位置)\n    let containerResult = _pc_assets_js_charts_components_ContainerComponent__WEBPACK_IMPORTED_MODULE_0__[\"default\"].drawCommonContainer({\n      container: container\n    });\n    if (!containerResult.svgJqDom) return false;\n    if (!options.datas.columns || !options.datas.columns.length) {\n      console.log('当前图形没有合法的画图数据');\n      return false;\n    }\n    if (!chartAxis.curYAxis || !chartAxis.curYAxis.length) return false;\n\n    // 获取图形的整体宽度和高度\n    let chartWidth = container.offsetWidth,\n      chartHeight = container.offsetHeight;\n    let kpiFontBaseWidth = Math.min(chartWidth, chartHeight),\n      //  因为KPI图形的宽高比例不同的情况下，完全按照高度来动态计算字体大小不太合理，需要综合宽高\n      kpiTitleStyleText = '',\n      //  图形中标题区域的样式\n      kpiValueStyleText = 'white-space:nowrap;word-break:keep-all;',\n      //  图形中数值区域的样式 , 不允许换行\n      kpiValueBasicStyleText = '',\n      //  图形中数值基础通用的样式\n      kpiValuePositiveStyleText = '',\n      //  图形中数值为非负数的样式\n      kpiValueNegativeStyleText = '',\n      //  图形中数值为非负数的样式\n      kpiPrefixBasicStyleText = '',\n      //  图形中数值前缀的样式\n      kpiSuffixStyleText = '',\n      //  图形中数值后缀的样式\n      kpiInRangeStyleText = '',\n      //图形中数值在区间中的样式\n      kpiInRangePrefix = '',\n      //图形中数值在区间中的前缀\n      kpiPrefixInRangeStyleText = '',\n      //  图形中数值在区间中的前缀的样式\n      kpiInRangeSuffix = '',\n      //图形中数值在区间中的后缀\n      kpiSuffixInRangeStyleText = '',\n      //  图形中数值在区间中的后缀的样式\n      kpiConfOptions = {\n        timeCut: 2000,\n        animationFlag: false,\n        //  数值翻牌动画\n        alignment: '',\n        fontFamily: '',\n        showTitleFlag: true,\n        titleFont: '',\n        titleFontSizeType: '',\n        titleFontSize: Math.max(kpiFontBaseWidth / 15, 20),\n        titleFontColor: '',\n        titleFontWeight: '',\n        titleFontStyle: '',\n        titleFontPosition: 'top',\n        //  KPI中标题的位置 ， 在上，在下，在左\n        titleDistanceWidthValue: '',\n        //  KPI中标题与数值的间距\n\n        showValueFlag: true,\n        valueFontSizeType: '',\n        valueFontSize: Math.max(kpiFontBaseWidth / 10, 30),\n        valueFontColor: '',\n        valueFontWeight: '',\n        valueFontBackground: '',\n        valueFontRadius: '',\n        valueFontLetterSpacing: '',\n        valuePrefixText: '',\n        valuePrefixFontColor: '',\n        valuePrefixFontSize: '',\n        valuePrefixFontStyle: '',\n        valuePrefixFontWeight: '',\n        valueSuffixText: '',\n        valueSuffixFont: '',\n        valueSuffixFontSize: '',\n        valueSuffixFontColor: '',\n        valueSuffixFontStyle: '',\n        valueSuffixFontWeight: '',\n        valueRange: null\n      };\n    // 通过用户配置，将各个配置分配到对应的kpiConfOptions配置参数中\n    if (chartConfigures) {\n      // 对齐方式\n      if (chartConfigures.kpi_content_alignment) {\n        switch (chartConfigures.kpi_content_alignment) {\n          case 'kpi_content_alignment_left':\n            kpiConfOptions.alignment = 'left';\n            break;\n          case 'kpi_content_alignment_right':\n            kpiConfOptions.alignment = 'right';\n            break;\n          case 'kpi_content_alignment_center':\n            kpiConfOptions.alignment = 'center';\n            break;\n        }\n      }\n      // 字体\n      if (chartConfigures.kpi_content_font_family) {\n        let theFamily = chartConfigures.kpi_content_font_family;\n        kpiConfOptions.fontFamily = theFamily && theFamily.toLowerCase() === 'default' ? '' : theFamily;\n      }\n      // 开启数字翻牌的动画\n      if (chartConfigures.kpi_content_value_animation) {\n        kpiConfOptions.animationFlag = !!chartConfigures.kpi_content_value_animation;\n      }\n      //区间配置\n      if (chartConfigures.kpi_config_range_flag && chartConfigures.kpi_config_range && chartConfigures.kpi_config_range.length) {\n        kpiConfOptions.valueRange = chartConfigures.kpi_config_range;\n      }\n      // 是否隐藏标题\n      if (chartConfigures.kpi_show_title_label_flag === false) {\n        kpiConfOptions.showTitleFlag = false;\n      }\n      // 标题位置\n      if (chartConfigures.kpi_positionType_label) {\n        switch (chartConfigures.kpi_positionType_label) {\n          case 'option_kpi_position_left':\n            kpiConfOptions.titleFontPosition = 'left';\n            break;\n          case 'option_kpi_position_bottom':\n            kpiConfOptions.titleFontPosition = 'bottom';\n            break;\n          default:\n            kpiConfOptions.titleFontPosition = 'top';\n            break;\n        }\n      }\n      // 标题内容\n      if (chartConfigures.kpi_title_text_label) {\n        kpiConfOptions.titleFont = chartConfigures.kpi_title_text_label;\n      }\n      // 标题文字大小配置类型\n      if (chartConfigures.kpi_attr_font_size_label_type) {\n        // 如果配置过数值类型时，识别类型是否是number，则类型是number 否则是类型\n        kpiConfOptions.titleFontSizeType = chartConfigures.kpi_attr_font_size_label_type !== 'option_kpi_font_size_type_number' ? 'default' : 'number';\n      } else {\n        // 没有配置过数值类型时，如果属性大小是数值，则类型是number 否则是类型\n        if (_DataFocusMethod.isPureNumber(chartConfigures.kpi_attr_font_size_label)) {\n          kpiConfOptions.titleFontSizeType = 'number';\n        } else {\n          kpiConfOptions.titleFontSizeType = 'default';\n        }\n      }\n      // 标题文字大小\n      if (kpiConfOptions.titleFontSizeType === 'default') {\n        let theAttrLabel = chartConfigures.kpi_attr_font_size_label_map || chartConfigures.kpi_attr_font_size_label;\n        switch (theAttrLabel) {\n          case 'option_font_size_huge':\n            kpiConfOptions.titleFontSize = Math.max(kpiFontBaseWidth / 7, 40);\n            break;\n          case \"option_font_size_super\":\n            kpiConfOptions.titleFontSize = Math.max(kpiFontBaseWidth / 9, 35);\n            break;\n          case 'option_font_size_Maximum':\n            kpiConfOptions.titleFontSize = Math.max(kpiFontBaseWidth / 10, 30);\n            break;\n          case \"option_font_size_bigger\":\n            kpiConfOptions.titleFontSize = Math.max(kpiFontBaseWidth / 13, 25);\n            break;\n          case 'option_font_size_smaller':\n            kpiConfOptions.titleFontSize = Math.max(kpiFontBaseWidth / 17, 15);\n            break;\n          case 'option_font_size_Minimum':\n            kpiConfOptions.titleFontSize = Math.max(kpiFontBaseWidth / 20, 12);\n            break;\n          case 'option_default_value':\n            kpiConfOptions.titleFontSize = Math.max(kpiFontBaseWidth / 15, 20);\n            break;\n        }\n\n        // 标题文字颜色\n        if (chartConfigures.kpi_attr_default_font_color_label) {\n          kpiConfOptions.titleFontColor = chartConfigures.kpi_attr_default_font_color_label;\n        }\n        // 标题文字样式\n        switch (chartConfigures.kpi_default_font_weight_label) {\n          case 'option_bold_value':\n            kpiConfOptions.titleFontStyle = '';\n            kpiConfOptions.titleFontWeight = 'bold';\n            break;\n          case 'option_italic_value':\n            kpiConfOptions.titleFontStyle = 'italic';\n            kpiConfOptions.titleFontWeight = '';\n            break;\n          case 'option_bold_italic_value':\n            kpiConfOptions.titleFontStyle = 'italic';\n            kpiConfOptions.titleFontWeight = 'bold';\n            break;\n          default:\n            kpiConfOptions.titleFontStyle = '';\n            kpiConfOptions.titleFontWeight = '';\n            break;\n        }\n      } else if (kpiConfOptions.titleFontSizeType === 'number') {\n        let theTitleFontStyle = chartConfigures.kpi_attr_number_font_style || {};\n        kpiConfOptions.titleFontSize = _DataFocusMethod.isPureNumber(theTitleFontStyle.fontSize) ? theTitleFontStyle.fontSize : 14;\n        if (theTitleFontStyle.fontColor) {\n          kpiConfOptions.titleFontColor = theTitleFontStyle.fontColor;\n        }\n        if (theTitleFontStyle.fontBold) {\n          kpiConfOptions.titleFontWeight = 'bold';\n        }\n        if (theTitleFontStyle.fontItalic) {\n          kpiConfOptions.titleFontStyle = 'italic';\n        }\n      }\n\n      // 是否隐藏数值\n      if (chartConfigures.kpi_show_content_label_flag === false) {\n        kpiConfOptions.showValueFlag = false;\n      }\n      // 数值大小配置类型\n      if (chartConfigures.kpi_measure_font_size_label_type) {\n        // 如果配置过数值类型时，识别类型是否是number，则类型是number 否则是类型\n        kpiConfOptions.valueFontSizeType = chartConfigures.kpi_measure_font_size_label_type !== 'option_kpi_font_size_type_number' ? 'default' : 'number';\n      } else {\n        // 没有配置过数值类型时，如果数值大小是数值，则类型是number 否则是类型\n        if (_DataFocusMethod.isPureNumber(chartConfigures.kpi_measure_font_size_label)) {\n          kpiConfOptions.valueFontSizeType = 'number';\n        } else {\n          kpiConfOptions.valueFontSizeType = 'default';\n        }\n      }\n      // 数值大小\n      if (kpiConfOptions.valueFontSizeType === 'default') {\n        let theLabelMap = chartConfigures.kpi_measure_font_size_label_map || chartConfigures.kpi_measure_font_size_label;\n        switch (theLabelMap) {\n          case 'option_font_size_huge':\n            kpiConfOptions.valueFontSize = Math.max(kpiFontBaseWidth / 6, 70);\n            break;\n          case \"option_font_size_super\":\n            kpiConfOptions.valueFontSize = Math.max(kpiFontBaseWidth / 7, 60);\n            break;\n          case 'option_font_size_Maximum':\n            kpiConfOptions.valueFontSize = Math.max(kpiFontBaseWidth / 8, 50);\n            break;\n          case 'option_font_size_bigger':\n            kpiConfOptions.valueFontSize = Math.max(kpiFontBaseWidth / 9, 40);\n            break;\n          case 'option_font_size_smaller':\n            kpiConfOptions.valueFontSize = Math.max(kpiFontBaseWidth / 13, 20);\n            break;\n          case 'option_font_size_Minimum':\n            kpiConfOptions.valueFontSize = Math.max(kpiFontBaseWidth / 15, 12);\n            break;\n          case 'option_default_value':\n            kpiConfOptions.valueFontSize = Math.max(kpiFontBaseWidth / 10, 30);\n            break;\n        }\n\n        // 数值文字颜色\n        if (chartConfigures.kpi_measure_default_font_color_label) {\n          kpiConfOptions.valueFontColor = chartConfigures.kpi_measure_default_font_color_label;\n        }\n        // 数值文字样式\n        switch (chartConfigures.kpi_measure_default_font_weight_label) {\n          case 'option_bold_value':\n            kpiConfOptions.valueFontStyle = '';\n            kpiConfOptions.valueFontWeight = 'bold';\n            break;\n          case 'option_italic_value':\n            kpiConfOptions.valueFontStyle = 'italic';\n            kpiConfOptions.valueFontWeight = '';\n            break;\n          case 'option_bold_italic_value':\n            kpiConfOptions.valueFontStyle = 'italic';\n            kpiConfOptions.valueFontWeight = 'bold';\n            break;\n          default:\n            kpiConfOptions.valueFontStyle = '';\n            kpiConfOptions.valueFontWeight = '';\n            break;\n        }\n      } else if (kpiConfOptions.valueFontSizeType === 'number') {\n        let theValueFontStyle = chartConfigures.kpi_measure_content_font_style || {};\n        kpiConfOptions.valueFontSize = _DataFocusMethod.isPureNumber(theValueFontStyle.fontSize) ? theValueFontStyle.fontSize : 32;\n        if (theValueFontStyle.fontColor) {\n          kpiConfOptions.valueFontColor = theValueFontStyle.fontColor;\n        }\n        if (theValueFontStyle.fontBold) {\n          kpiConfOptions.valueFontWeight = 'bold';\n        }\n        if (theValueFontStyle.fontItalic) {\n          kpiConfOptions.valueFontStyle = 'italic';\n        }\n      }\n      // 数值样式\n      if (chartConfigures.kpi_measure_font_weight_label) {\n        switch (chartConfigures.kpi_measure_font_weight_label) {\n          case 'option_bold_value':\n            kpiConfOptions.valueFontStyle = '';\n            kpiConfOptions.valueFontWeight = 'bold';\n            break;\n          case 'option_italic_value':\n            kpiConfOptions.valueFontStyle = 'italic';\n            kpiConfOptions.valueFontWeight = '';\n            break;\n          case 'option_bold_italic_value':\n            kpiConfOptions.valueFontStyle = 'italic';\n            kpiConfOptions.valueFontWeight = 'bold';\n            break;\n          default:\n            kpiConfOptions.valueFontStyle = '';\n            kpiConfOptions.valueFontWeight = '';\n            break;\n        }\n      }\n      // 数值与标题之间的间隔\n      if (_DataFocusMethod.isPureNumber(chartConfigures.kpi_slider_label)) {\n        kpiConfOptions.titleDistanceWidthValue = chartConfigures.kpi_slider_label;\n      }\n      // 数值之间的间隔\n      if (_DataFocusMethod.isPureNumber(chartConfigures.kpi_data_dis_label)) {\n        kpiConfOptions.valueFontLetterSpacing = chartConfigures.kpi_data_dis_label;\n      }\n      // 数值背景\n      if (chartConfigures.kpi_show_content_back_color_flag) {\n        if (chartConfigures.kpi_content_background_color) {\n          kpiConfOptions.valueFontBackground = chartConfigures.kpi_content_background_color;\n        }\n        // 数值背景圆角\n        if (kpiConfOptions.valueFontBackground && _DataFocusMethod.isPureNumber(chartConfigures.kpi_back_radius_label)) {\n          kpiConfOptions.valueFontRadius = chartConfigures.kpi_back_radius_label;\n        }\n      }\n      // 开启了数值前缀\n      if (chartConfigures.kpi_show_content_prefix_label_flag) {\n        // 前缀内容\n        if (chartConfigures.kpi_prefix_label_content) kpiConfOptions.valuePrefixText = chartConfigures.kpi_prefix_label_content;\n        // 前缀样式\n        let theFontType = chartConfigures.kpi_prefix_font_type || chartConfigures.kpi_measure_font_size_label_type;\n        if (theFontType === 'option_kpi_font_size_type_number') {\n          // 如果没有配置前缀样式，则继承使用数值样式\n          let thePrefixFontStyle = chartConfigures.kpi_prefix_font_style || chartConfigures.kpi_measure_content_font_style || {};\n          let theFontStyle = chartConfigures.kpi_measure_content_font_style || {};\n          kpiConfOptions.valuePrefixFontSize = parseFloat(thePrefixFontStyle.fontSize === undefined || thePrefixFontStyle.fontSize === '' ? theFontStyle.fontSize : thePrefixFontStyle.fontSize) || 32;\n          kpiConfOptions.valuePrefixFontStyle = (thePrefixFontStyle.fontItalic === undefined || thePrefixFontStyle.fontItalic === '' ? theFontStyle.fontItalic : thePrefixFontStyle.fontItalic) ? 'italic' : '';\n          kpiConfOptions.valuePrefixFontWeight = (thePrefixFontStyle.fontBold === undefined || thePrefixFontStyle.fontBold === '' ? theFontStyle.fontBold : thePrefixFontStyle.fontBold) ? 'bold' : '';\n          kpiConfOptions.valuePrefixFontColor = thePrefixFontStyle.fontColor === undefined || thePrefixFontStyle.fontColor === '' ? theFontStyle.fontColor : thePrefixFontStyle.fontColor;\n        } else {\n          let theFontSizeMap = chartConfigures.kpi_default_prefix_font_size || chartConfigures.kpi_measure_font_size_label_map;\n          kpiConfOptions.valuePrefixFontSize = _pc_assets_js_charts_system_basic_kpi_KpiChartComponent__WEBPACK_IMPORTED_MODULE_2__[\"default\"].translateAutoFontSize(theFontSizeMap, kpiFontBaseWidth);\n          let theFontColor = chartConfigures.kpi_default_prefix_font_color || chartConfigures.kpi_measure_default_font_color_label;\n          kpiConfOptions.valuePrefixFontColor = theFontColor;\n          let theFontStyle = _pc_assets_js_charts_system_basic_kpi_KpiChartComponent__WEBPACK_IMPORTED_MODULE_2__[\"default\"].translateFontStyleLabel(chartConfigures.kpi_default_prefix_font_weight || chartConfigures.kpi_measure_default_font_weight_label);\n          kpiConfOptions.valuePrefixFontStyle = theFontStyle.italic ? 'italic' : '';\n          kpiConfOptions.valuePrefixFontWeight = theFontStyle.bold ? 'bold' : '';\n        }\n      }\n      // 开启了数值后缀\n      if (chartConfigures.kpi_show_content_suffix_label_flag) {\n        // 后缀内容\n        if (chartConfigures.kpi_suffix_label_content) kpiConfOptions.valueSuffixText = chartConfigures.kpi_suffix_label_content;\n        // 后缀样式\n        let theFontType = chartConfigures.kpi_suffix_font_type || chartConfigures.kpi_measure_font_size_label_type;\n        if (theFontType === 'option_kpi_font_size_type_number') {\n          let theSuffixFontStyle = chartConfigures.kpi_suffix_font_style || chartConfigures.kpi_measure_content_font_style || {};\n          let theFontStyle = chartConfigures.kpi_measure_content_font_style || {};\n          kpiConfOptions.valueSuffixFontSize = parseFloat(theSuffixFontStyle.fontSize === undefined || theSuffixFontStyle.fontSize === '' ? theFontStyle.fontSize : theSuffixFontStyle.fontSize) || 32;\n          kpiConfOptions.valueSuffixFontStyle = (theSuffixFontStyle.fontItalic === undefined || theSuffixFontStyle.fontItalic === '' ? theFontStyle.fontItalic : theSuffixFontStyle.fontItalic) ? 'italic' : '';\n          kpiConfOptions.valueSuffixFontWeight = (theSuffixFontStyle.fontBold === undefined || theSuffixFontStyle.fontBold === '' ? theFontStyle.fontBold : theSuffixFontStyle.fontBold) ? 'bold' : '';\n          kpiConfOptions.valueSuffixFontColor = theSuffixFontStyle.fontColor === undefined || theSuffixFontStyle.fontColor === '' ? theFontStyle.fontColor : theSuffixFontStyle.fontColor;\n        } else {\n          let theFontSizeMap = chartConfigures.kpi_default_suffix_font_size || chartConfigures.kpi_measure_font_size_label_map;\n          kpiConfOptions.valueSuffixFontSize = _pc_assets_js_charts_system_basic_kpi_KpiChartComponent__WEBPACK_IMPORTED_MODULE_2__[\"default\"].translateAutoFontSize(theFontSizeMap, kpiFontBaseWidth);\n          let theFontColor = chartConfigures.kpi_default_suffix_font_color || chartConfigures.kpi_measure_default_font_color_label;\n          kpiConfOptions.valueSuffixFontColor = theFontColor;\n          let theFontStyle = _pc_assets_js_charts_system_basic_kpi_KpiChartComponent__WEBPACK_IMPORTED_MODULE_2__[\"default\"].translateFontStyleLabel(chartConfigures.kpi_default_suffix_font_weight || chartConfigures.kpi_measure_default_font_weight_label);\n          kpiConfOptions.valueSuffixFontStyle = theFontStyle.italic ? 'italic' : '';\n          kpiConfOptions.valueSuffixFontWeight = theFontStyle.bold ? 'bold' : '';\n        }\n      }\n\n      // KPI中有多条数据时，需要循环轮播，可以配置轮播时间，默认是2s\n      if (_DataFocusMethod.isPureNumber(chartConfigures.time_title)) {\n        kpiConfOptions.timeCut = parseFloat(chartConfigures.time_title);\n        kpiConfOptions.timeCut = Math.max(0.5, kpiConfOptions.timeCut);\n        kpiConfOptions.timeCut = Math.min(10, kpiConfOptions.timeCut);\n        kpiConfOptions.timeCut = kpiConfOptions.timeCut * 1000;\n      }\n    }\n\n    // 通过kpiConfOptions配置参数生成对应的kpi各个部分的样式表\n    if (kpiConfOptions.showTitleFlag) {\n      if (kpiConfOptions.titleFontPosition === 'left') {\n        kpiTitleStyleText += 'display:inline-block;vertical-align:middle;';\n        kpiValueStyleText += 'display:inline-block;vertical-align:middle;';\n      } else {\n        kpiTitleStyleText += 'display:block;';\n        kpiValueStyleText += 'display:block;';\n      }\n      if (kpiConfOptions.titleDistanceWidthValue) {\n        if (kpiConfOptions.titleFontPosition === 'top') {\n          kpiTitleStyleText += 'margin-bottom:' + kpiConfOptions.titleDistanceWidthValue + 'px;';\n        } else if (kpiConfOptions.titleFontPosition === 'left') {\n          kpiTitleStyleText += 'margin-right:' + kpiConfOptions.titleDistanceWidthValue + 'px;';\n        } else if (kpiConfOptions.titleFontPosition === 'bottom') {\n          kpiTitleStyleText += 'margin-top:' + kpiConfOptions.titleDistanceWidthValue + 'px;';\n        }\n      }\n      if (kpiConfOptions.titleFontSize) {\n        kpiTitleStyleText += 'font-size:' + kpiConfOptions.titleFontSize + 'px;';\n      }\n      if (kpiConfOptions.titleFontColor) {\n        kpiTitleStyleText += 'color:' + kpiConfOptions.titleFontColor + ';';\n      }\n      if (kpiConfOptions.titleFontWeight) {\n        kpiTitleStyleText += 'font-weight:bold;';\n      }\n      if (kpiConfOptions.titleFontStyle) {\n        kpiTitleStyleText += 'font-style:italic;';\n      }\n    }\n    if (kpiConfOptions.valueFontColor) {\n      kpiValueBasicStyleText += 'color:' + kpiConfOptions.valueFontColor + ';';\n    }\n    if (kpiConfOptions.valueFontSize) {\n      kpiValueBasicStyleText += 'font-size:' + kpiConfOptions.valueFontSize + 'px;';\n    }\n    if (kpiConfOptions.valueFontWeight) {\n      kpiValueBasicStyleText += 'font-weight:' + kpiConfOptions.valueFontWeight + ';';\n    }\n    if (kpiConfOptions.valueFontStyle) {\n      kpiValueBasicStyleText += 'font-style:' + kpiConfOptions.valueFontStyle + ';';\n    }\n    if (kpiConfOptions.valueFontBackground) {\n      kpiValueBasicStyleText += 'background:' + kpiConfOptions.valueFontBackground + ';';\n    }\n    if (kpiConfOptions.valueFontBackground && kpiConfOptions.valueFontRadius) {\n      kpiValueBasicStyleText += 'border-radius:' + kpiConfOptions.valueFontRadius + 'px;';\n    }\n    if (kpiConfOptions.valueFontLetterSpacing) {\n      kpiValueBasicStyleText += 'margin-right:' + kpiConfOptions.valueFontLetterSpacing + 'px;';\n    }\n\n    // 如果配置过前缀\n    // if (kpiConfOptions.valuePositivePrefix || kpiConfOptions.valueNegativePrefix || kpiConfOptions.valueRange) {\n    if (kpiConfOptions.valuePrefixText || kpiConfOptions.valueRange) {\n      if (kpiConfOptions.valuePrefixFontSize) {\n        kpiPrefixBasicStyleText += 'font-size:' + kpiConfOptions.valuePrefixFontSize + 'px;';\n      } else {\n        kpiPrefixBasicStyleText += 'font-size:' + kpiConfOptions.valueFontSize + 'px;';\n      }\n      if (kpiConfOptions.valuePrefixFontStyle) {\n        kpiPrefixBasicStyleText += 'font-style:' + kpiConfOptions.valuePrefixFontStyle + ';';\n      }\n      if (kpiConfOptions.valuePrefixFontWeight) {\n        kpiPrefixBasicStyleText += 'font-weight:' + kpiConfOptions.valuePrefixFontWeight + ';';\n      }\n      if (kpiConfOptions.valuePrefixFontColor) {\n        kpiPrefixBasicStyleText += 'color:' + kpiConfOptions.valuePrefixFontColor + ';';\n      }\n    }\n    // 如果配置过后缀\n    // if (kpiConfOptions.valueSuffixFont || kpiConfOptions.valueRange) {\n    if (kpiConfOptions.valueSuffixText || kpiConfOptions.valueRange) {\n      if (kpiConfOptions.valueSuffixFontSize) {\n        kpiSuffixStyleText += 'font-size:' + kpiConfOptions.valueSuffixFontSize + 'px;';\n      } else {\n        kpiSuffixStyleText += 'font-size:' + kpiConfOptions.valueFontSize + 'px;';\n      }\n      if (kpiConfOptions.valueSuffixFontColor) {\n        kpiSuffixStyleText += 'color:' + kpiConfOptions.valueSuffixFontColor + ';';\n      }\n      if (kpiConfOptions.valueSuffixFontStyle) {\n        kpiSuffixStyleText += 'font-style:' + kpiConfOptions.valueSuffixFontStyle + ';';\n      }\n      if (kpiConfOptions.valueSuffixFontWeight) {\n        kpiSuffixStyleText += 'font-weight:' + kpiConfOptions.valueSuffixFontWeight + ';';\n      }\n    }\n\n    /***\r\n     *  画单独一个KPI数据\r\n     *  @param container    -   画图区域\r\n     *  @param titleText    -   当前KPI的title部分\r\n     *  @param valueText    -   当前KPI的content部分，因为当前数据可以通过设置数据格式配置成不同的字符串\r\n     *  @param options      -   额外的信息\r\n     *          {\r\n     *              realValue   -   当前kpi数据的真实数值\r\n     *              alarmStatus -   当前KPI值是否需要警告\r\n     *          }\r\n     * */\n    function drawAKpi(container, titleText, valueText, options) {\n      if (!container || !valueText || !options) return false;\n      valueText = (valueText || '') + '';\n      let realKpiValue = options.realValue,\n        kpiConfOptions = options.kpiConfOptions || {};\n      if (!_DataFocusMethod.isPureNumber(realKpiValue)) return false;\n      let kpiInRangeFlag = false;\n      kpiInRangeStyleText = '';\n      kpiInRangePrefix = '';\n      kpiPrefixInRangeStyleText = '';\n      kpiInRangeSuffix = '';\n      kpiSuffixInRangeStyleText = '';\n\n      // 使用时默认将options数组中第一个对象作为前缀浅颜色，第二个对象作为前缀内容导致了配置使用异常 #6154\n      // 严格校验配置类型及值\n      if (kpiConfOptions.valueRange) {\n        for (let i = 0; i < kpiConfOptions.valueRange.length; i++) {\n          let vca = kpiConfOptions.valueRange[i],\n            useFlag = false;\n          if (!vca.options) {} else if (_DataFocusMethod.isPureNumber(vca.max) && _DataFocusMethod.isPureNumber(vca.min) && realKpiValue > vca.min && realKpiValue <= vca.max) {\n            useFlag = true;\n          } else if (_DataFocusMethod.isPureNumber(vca.max) && !_DataFocusMethod.isPureNumber(vca.min) && realKpiValue <= vca.max) {\n            useFlag = true;\n          } else if (_DataFocusMethod.isPureNumber(vca.min) && !_DataFocusMethod.isPureNumber(vca.max) && realKpiValue > vca.min) {\n            useFlag = true;\n          }\n\n          // 如果适用当前区间颜色配置，则直接使用\n          if (useFlag) {\n            let theColor = vca.options && vca.options.find(function (item) {\n                return item.title === 'option_kpi_range_color';\n              }),\n              thePrefix = vca.options && vca.options.find(function (item) {\n                return item.title === 'option_kpi_range_prefix';\n              }),\n              thePrefixColor = vca.options && vca.options.find(function (item) {\n                return item.title === \"option_kpi_range_prefix_color\";\n              }),\n              theSuffix = vca.options && vca.options.find(function (item) {\n                return item.title === \"option_kpi_range_suffix\";\n              }),\n              theSuffixColor = vca.options && vca.options.find(function (item) {\n                return item.title === \"option_kpi_range_suffix_color\";\n              });\n            if (theColor && theColor.value) kpiInRangeStyleText = \"color: \" + theColor.value + \";\";\n            if (thePrefix && thePrefix.value) kpiInRangePrefix = thePrefix.value;\n            if (thePrefixColor && thePrefixColor.value) kpiPrefixInRangeStyleText = \"color: \" + thePrefixColor.value + \";\";\n            if (theSuffix && theSuffix.value) kpiInRangeSuffix = theSuffix.value;\n            if (theSuffixColor && theSuffixColor.value) kpiSuffixInRangeStyleText = \"color: \" + theSuffixColor.value + \";\";\n            kpiInRangeFlag = true;\n            break;\n          }\n        }\n      }\n\n      // 拼接KPI图的数据\n      let kpiChartHtml = '<div class=\"kpi-chart-container\">';\n      kpiChartHtml += '<div class=\"kpi-content-container\" style=\"display:inline-block;overflow:hidden;' + 'text-align:' + (kpiConfOptions.alignment || '') + '; ' + 'font-family: ' + (kpiConfOptions.fontFamily || '') + ';\">';\n      // 标题区域 如果是在上，或者在左侧\n      if (kpiConfOptions.showTitleFlag && kpiConfOptions.titleFontPosition !== 'bottom') {\n        kpiChartHtml += '<div class=\"kpi-chart-title text-clip\" style=\"' + kpiTitleStyleText + '\">';\n        kpiChartHtml += _DataFocusMethod.translateIllegalStr(titleText, {\n          showUnicodeFlag: true\n        }) + \"</div>\";\n      }\n\n      // 数值区域内的数值部分\n      if (kpiConfOptions.showValueFlag) {\n        // 数值区域\n        kpiChartHtml += '<div class=\"kpi-chart-content label-text\" style=\"' + kpiValueStyleText + '\" alarm-status=\"' + !!options.alarmStatus + '\">';\n\n        // 数值区域内的前缀部分 ， 如果有配置区间，则使用区间配置\n        let thePrefixText = kpiConfOptions.valuePrefixText,\n          thePrefixStyle = kpiPrefixBasicStyleText;\n        if (kpiInRangeFlag) {\n          if (kpiInRangePrefix) thePrefixText = kpiInRangePrefix;\n          if (kpiPrefixInRangeStyleText) thePrefixStyle = kpiPrefixBasicStyleText + kpiPrefixInRangeStyleText;\n        }\n        if (thePrefixText) {\n          kpiChartHtml += '<div class=\"kpi-chart-prefix display-inline-block vertical-align-middle\" style=\"' + thePrefixStyle + '\">' + _DataFocusMethod.translateIllegalStr(thePrefixText, {\n            showUnicodeFlag: true\n          }) + '</div>';\n        }\n        kpiChartHtml += '<div class=\"kpi-content display-inline-block vertical-align-middle\">';\n        // KPI数值部分的颜色样式\n        let KpiValueColorStyle = realKpiValue >= 0 ? kpiValuePositiveStyleText : kpiValueNegativeStyleText;\n        if (kpiInRangeStyleText) KpiValueColorStyle = kpiInRangeStyleText;\n\n        // 如果配置数值翻牌动画，则先显示其中一个\n        if (kpiConfOptions.animationFlag) {\n          let animateTime = 25; //  动画次数\n          let stepGap = Math.floor((realKpiValue - 0) / animateTime);\n          if (stepGap < 1) stepGap = parseFloat(((realKpiValue - 0) / animateTime).toFixed(4));\n          let realFlopValueList = [];\n          let startValue = 0,\n            realValueStr = realKpiValue + '';\n          for (let i = 0; i < animateTime; i++) {\n            let theValueStr = startValue + '';\n            // 如果中间状态长度大于最终状态的长度，则裁剪中间状态的长度\n            if (theValueStr.length > realValueStr.length) {\n              realFlopValueList.push(parseFloat(theValueStr.substr(0, realValueStr.length)));\n            } else {\n              realFlopValueList.push(startValue);\n            }\n            startValue += stepGap;\n            if (realKpiValue >= 0 && startValue >= realKpiValue) break;\n            if (realKpiValue < 0 && startValue <= realKpiValue) break;\n          }\n          realFlopValueList.push(realKpiValue);\n          // 翻盘显示当前的值，直到显示最后的目标值\n          for (let theIndex = 0; theIndex < realFlopValueList.length; theIndex++) {\n            let realFlopValue = realFlopValueList[theIndex];\n            setTimeout(function () {\n              let flopContainer = $(container).find(\".kpi-content\");\n              let valueText = _DataFocusMethod.formatData(realFlopValue, options.yAxis);\n              let flopChartHtml = \"\";\n              for (let i = 0; i < valueText.length; i++) {\n                let lastLetterMargin = '';\n                if (i === valueText.length - 1) lastLetterMargin = 'margin:0;';\n                flopChartHtml += '<span class=\"kpi-content-item\" style=\"' + kpiValueBasicStyleText + KpiValueColorStyle + lastLetterMargin + '\">' + _DataFocusMethod.translateIllegalStr(valueText[i], {\n                  showUnicodeFlag: true\n                }) + '</span>';\n              }\n              flopContainer.empty();\n              flopContainer.html(flopChartHtml);\n            }, theIndex * 30);\n          }\n        } else {\n          // 如果配置过区间\n          for (let i = 0; i < valueText.length; i++) {\n            let lastLetterMargin = '';\n            if (i === valueText.length - 1) lastLetterMargin = 'margin:0;';\n            kpiChartHtml += '<span class=\"kpi-content-item\" style=\"' + kpiValueBasicStyleText + KpiValueColorStyle + lastLetterMargin + '\">' + _DataFocusMethod.translateIllegalStr(valueText[i], {\n              showUnicodeFlag: true\n            }) + '</span>';\n          }\n        }\n        kpiChartHtml += '</div>';\n\n        // 数值区域内的后缀部分 ， 如果有配置区间，则使用区间配置\n        let theSuffixText = kpiConfOptions.valueSuffixText,\n          theSuffixStyle = kpiSuffixStyleText;\n        if (kpiInRangeFlag) {\n          if (kpiInRangeSuffix) theSuffixText = kpiInRangeSuffix;\n          if (kpiSuffixInRangeStyleText) theSuffixStyle = kpiSuffixStyleText + kpiSuffixInRangeStyleText;\n        }\n        if (theSuffixText) {\n          kpiChartHtml += '<div class=\"kpi-chart-suffix display-inline-block vertical-align-middle\" style=\"' + theSuffixStyle + '\">' + _DataFocusMethod.translateIllegalStr(theSuffixText, {\n            showUnicodeFlag: true\n          }) + '</div>';\n        }\n        kpiChartHtml += '</div>'; // kpi-chart-content 的结束\n      }\n\n      // 标题区域 如果是在下 [ 标题不换行，超出宽度... ]\n      if (kpiConfOptions.showTitleFlag && kpiConfOptions.titleFontPosition === 'bottom') {\n        kpiChartHtml += '<div class=\"kpi-chart-title text-clip\" style=\"' + kpiTitleStyleText + '\">';\n        kpiChartHtml += _DataFocusMethod.translateIllegalStr(titleText, {\n          showUnicodeFlag: true\n        }) + \"</div>\";\n      }\n      kpiChartHtml += '</div>';\n      container.innerHTML = kpiChartHtml;\n\n      // @20230727 KPI图形区域变小时的处理 start ------------------------------------------------\n      // 1. 如果画图标题及\n      let theTitleHeight = 0,\n        theContentHeight = 0,\n        theSpaceHeight = 0;\n      if (kpiConfOptions.showTitleFlag) {\n        let theTitleSize = _pc_assets_js_charts_components_CommonComponent__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getStrSizeByCanvas(\"string\", titleText, {\n          fontSize: kpiConfOptions.titleFontSize\n        });\n        theTitleHeight = theTitleSize.height;\n        theSpaceHeight = parseFloat(kpiConfOptions.titleDistanceWidthValue) || 0;\n      }\n      if (kpiConfOptions.showValueFlag) {\n        let theContentSize = _pc_assets_js_charts_components_CommonComponent__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getStrSizeByCanvas(\"string\", '12344', {\n          fontSize: kpiConfOptions.valueFontSize\n        });\n        theContentHeight = theContentSize.height;\n      }\n      // 标题与数值在一个水平线\n      if (kpiConfOptions.titleFontPosition === 'left') {\n        $(container).css({\n          \"white-space\": \"nowrap\"\n        });\n        if (chartHeight < 10) {\n          // 区域很小时，就不显示了\n          $(container).html('');\n        } else {\n          if (theTitleHeight > chartHeight) {\n            $(container).find(\".kpi-chart-title\").css({\n              'font-size': Math.min(chartHeight, kpiConfOptions.titleFontSize)\n            });\n          }\n          if (theContentHeight > chartHeight) {\n            $(container).find(\".kpi-content .kpi-content-item\").css({\n              'font-size': Math.min(chartHeight, kpiConfOptions.valueFontSize)\n            });\n          }\n        }\n      }\n      // 标题与数值在一个垂直方向\n      else {\n        // 如果明确显示的高度超出了画图区域 1.先清除间隔高度\n        if (chartHeight < 10) {\n          // 区域很小时，就不显示了\n          $(container).html('');\n        } else if (theTitleHeight + theContentHeight + theSpaceHeight > chartHeight) {\n          // 如果清除间隔区域就可以放下，则清除标题上的间隔\n          if (theTitleHeight + theContentHeight <= chartHeight) {\n            if (kpiConfOptions.titleFontPosition === 'bottom') {\n              $(container).find(\".kpi-chart-title\").css({\n                \"margin-top\": 0\n              });\n            } else {\n              $(container).find(\".kpi-chart-title\").css({\n                \"margin-bottom\": 0\n              });\n            }\n          }\n          // 有数值内容的情况下，如果清除标题能放下，则清除标题内容\n          else if (theContentHeight && theTitleHeight) {\n            $(container).find(\".kpi-chart-title\").hide();\n\n            // 如果内容还是比画图区域告，将内容的高度调小\n            if (theContentHeight > chartHeight && chartHeight < kpiConfOptions.valueFontSize) {\n              $(container).find(\".kpi-content .kpi-content-item\").css({\n                'font-size': chartHeight\n              });\n            }\n          }\n          // 只有数值时，如果区域不够高，则调整数值字体大小\n          else if (theContentHeight && theContentHeight > chartHeight && chartHeight < kpiConfOptions.valueFontSize) {\n            $(container).find(\".kpi-content .kpi-content-item\").css({\n              'font-size': chartHeight\n            });\n          }\n          // 只有标题时，将标题的高度调小\n          else if (theTitleHeight && theTitleHeight > chartHeight && chartHeight < kpiConfOptions.titleFontSize) {\n            $(container).find(\".kpi-chart-title\").css({\n              'font-size': chartHeight\n            });\n          }\n        }\n      }\n      // @20230727 KPI图形区域变小时的处理 end ------------------------------------------------\n\n      typeof options.callback === 'function' && options.callback.call(this);\n    }\n\n    // KPI的配置只允许一个Y轴 或 N的X轴一个Y轴\n    let kpiDrawDatas = [];\n    if (chartAxis.curXAxis && chartAxis.curXAxis.length) {\n      // 有X轴的情况下\n      tableData.columns && tableData.columns.forEach(function (rowData, index) {\n        if (!rowData || !rowData.length) return;\n        let x0 = [],\n          y0;\n        // 允许多个X轴\n        chartAxis.curXAxis.forEach(function (xAxis) {\n          if (rowData[xAxis.index]) {\n            x0.push(rowData[xAxis.index]);\n          }\n        });\n        // 只允许一个Y轴\n        let curYAxis = chartAxis.curYAxis[0];\n        if (_DataFocusMethod.isPureNumber(rowData[curYAxis.index])) {\n          y0 = rowData[curYAxis.index];\n          let theXLabel = x0.join(',');\n\n          // 20220106 如果有单行数据且有属性值的情况下  且 属性值是无效数据（null,空字符串,0）的情况下 将titleText调整为数值列名\n          if (theXLabel && ['null', '0'].indexOf(theXLabel) > -1) {\n            theXLabel = curYAxis.displayName || curYAxis.col_name;\n          }\n          kpiDrawDatas.push({\n            x0: theXLabel,\n            y0: y0,\n            yAxis: curYAxis,\n            alarmStatus: _DataFocusMethod.specifyAlarm(tableData.alarms, index, curYAxis.index)\n          });\n        }\n      });\n    } else if (chartAxis.curYAxis) {\n      // 只有Y轴的情况下\n      tableData.columns && tableData.columns.forEach(function (rowData, index) {\n        if (!rowData || !rowData.length) return;\n        let y0;\n        // 只允许一个Y轴\n        let curYAxis = chartAxis.curYAxis[0];\n        if (_DataFocusMethod.isPureNumber(rowData[curYAxis.index])) {\n          y0 = rowData[curYAxis.index];\n          kpiDrawDatas.push({\n            x0: curYAxis.displayName || curYAxis.col_name,\n            y0: y0,\n            yAxis: curYAxis,\n            alarmStatus: _DataFocusMethod.specifyAlarm(tableData.alarms, index, curYAxis.index)\n          });\n        }\n      });\n    }\n\n    // 如果只有一个数据时，不需要循环轮播\n    if (kpiDrawDatas && kpiDrawDatas.length === 1) {\n      // 只有一条数据的情况，不需要循环 ( 只有一个Measure列的情况 ； 或有一个Attribute列与一个Measure列，但只有一条数据的情况 )\n      let kpiMapData = kpiDrawDatas[0],\n        titleText = kpiMapData.x0,\n        valueText = _DataFocusMethod.formatData(kpiMapData.y0, kpiMapData.yAxis);\n      drawAKpi(containerResult.svgContainer, kpiConfOptions.titleFont || titleText, valueText, {\n        realValue: kpiMapData.y0,\n        yAxis: kpiMapData.yAxis,\n        alarmStatus: kpiMapData.alarmStatus,\n        kpiConfOptions: kpiConfOptions\n      });\n    }\n    // 多条数据需要轮播\n    else if (kpiDrawDatas && kpiDrawDatas.length > 1) {\n      // 有一个Attribute和一个Measure且有多条数据的情况 ，需要循环\n      let kpiTimerCallback = function (kpiDataIndex, kpiDrawDatas, options) {\n        options = options || {};\n        if (!_DataFocusMethod.isPureNumber(kpiDataIndex) || !kpiDrawDatas || !options.curYAxis || !options.drawAKpi || !options.kpiConfOptions || !options.conf) return false;\n        kpiDataIndex = kpiDataIndex % kpiDrawDatas.length;\n        let kpiMapData = kpiDrawDatas[kpiDataIndex],\n          titleText = kpiMapData.x0,\n          valueText = _DataFocusMethod.formatData(kpiMapData.y0, kpiMapData.yAxis);\n        options.drawAKpi(containerResult.svgContainer, kpiConfOptions.titleFont || titleText, valueText, {\n          realValue: kpiMapData.y0,\n          yAxis: kpiMapData.yAxis,\n          alarmStatus: kpiMapData.alarmStatus,\n          kpiConfOptions: options.kpiConfOptions,\n          callback: function () {\n            if (options.conf.timer) clearTimeout(options.conf.timer);\n            options.conf.timer = setTimeout(function () {\n              options.kpiTimerCallback && options.kpiTimerCallback(kpiDataIndex + 1, kpiDrawDatas, options);\n            }, options.kpiConfOptions.timeCut);\n          }\n        });\n      };\n      kpiTimerCallback(0, kpiDrawDatas, {\n        curYAxis: chartAxis.curXAxis[0],\n        conf: conf,\n        kpiConfOptions: kpiConfOptions,\n        drawAKpi: drawAKpi,\n        kpiTimerCallback: kpiTimerCallback\n      });\n    }\n\n    /* *\r\n    * 画完图需要告诉外部的配置组件，当前图形的配置：\r\n    *   标题是自动显示，还是自动隐藏 ； 或者是用户配置的显示及隐藏\r\n    * */\n    let returnConfigureAutoValue = {\n      kpi_carousel_flag: !!(kpiDrawDatas && kpiDrawDatas.length > 1),\n      kpi_prefix_font_type: chartConfigures.kpi_prefix_font_type || chartConfigures.kpi_measure_font_size_label_type,\n      kpi_suffix_font_type: chartConfigures.kpi_suffix_font_type || chartConfigures.kpi_measure_font_size_label_type\n    };\n    return {\n      chartAutoConfigures: returnConfigureAutoValue\n    };\n  },\n  // [*必填项]图表配置列表，其中的require条件不仅可以使用以下配置项的key，也可以使用drawChart中返回的chartAutoConfigures中的值\n  // drawChart返回的chartAutoConfigures是图形返回给图形配置组件的信息，用于开发者可以控制配置的显示与隐藏\n  chartConfigureList: [\n  // 通用： 对齐方式，字体\n  {\n    category: \"category_general\",\n    title: \"category_general\",\n    options: [\n    // 对齐方式\n    {\n      key: \"kpi_content_alignment\",\n      title: \"option_kpi_content_alignment\",\n      type: \"selectTile\",\n      selection: [\"kpi_content_alignment_left\", \"kpi_content_alignment_center\", \"kpi_content_alignment_right\"]\n    },\n    // 字体\n    {\n      key: \"kpi_content_font_family\",\n      title: \"option_kpi_content_font_family\",\n      type: \"fontFamily\"\n    },\n    //恢复默认配置\n    {\n      key: \"chart_config_restart\",\n      type: \"restart\"\n    }]\n  },\n  // 标题配置： 显示/隐藏，字体大小，字体样式，字体颜色，与数值的间距\n  {\n    key: \"category_kpi_title_config\",\n    title: \"category_kpi_title_config\",\n    options: [\n    // 显示/隐藏\n    {\n      key: \"kpi_show_title_label_flag\",\n      title: \"option_show_hide_text\",\n      type: \"checkbox-prev\",\n      defaultValue: true\n    },\n    // 标题位置[在上，在下，在左]\n    {\n      key: \"kpi_positionType_label\",\n      title: \"option_kpi_positionType_label\",\n      require: \"kpi_show_title_label_flag\",\n      type: \"selectTile\",\n      selection: [\"option_kpi_position_top\", \"option_kpi_position_left\", \"option_kpi_position_bottom\"],\n      defaultValue: 'option_kpi_position_top'\n    },\n    // 标题内容\n    {\n      key: \"kpi_title_text_label\",\n      title: \"option_kpi_title_text_label\",\n      require: \"kpi_show_title_label_flag\",\n      type: \"text\",\n      placeholder: \"option_kpi_title_text_label_placeholder\",\n      inheritFlag: false // 主要用于看板中替换模板问答时，标明该配置是不接受模板中配置的标志\n    },\n    // 字体类型\n    {\n      key: \"kpi_attr_font_size_label_type\",\n      title: \"option_kpi_attr_font_size_label_type\",\n      description: \"option_kpi_attr_font_size_label_type_desc\",\n      type: \"selectTile\",\n      require: \"kpi_show_title_label_flag\",\n      selection: [\"option_kpi_font_size_type_default\", \"option_kpi_font_size_type_number\"],\n      defaultValue: \"option_kpi_font_size_type_default\"\n    },\n    // 数字字体\n    {\n      key: \"kpi_attr_number_font_style\",\n      title: \"option_kpi_attr_font_style_label\",\n      require: \"kpi_show_title_label_flag;kpi_attr_font_size_label_type=option_kpi_font_size_type_number\",\n      type: \"fontStyle\",\n      defaultValue: {\n        fontSize: 14\n      }\n    },\n    // 自动字体\n    {\n      key: \"kpi_attr_font_size_label_map\",\n      title: \"option_kpi_attr_font_size_label_map\",\n      require: \"kpi_show_title_label_flag;kpi_attr_font_size_label_type!=option_kpi_font_size_type_number\",\n      type: \"select\",\n      selection: [\"option_default_value\", \"option_font_size_Minimum\", \"option_font_size_smaller\", \"option_font_size_bigger\", \"option_font_size_Maximum\", \"option_font_size_super\", \"option_font_size_huge\"]\n    },\n    // 自动颜色\n    {\n      key: \"kpi_attr_default_font_color_label\",\n      title: \"option_kpi_attr_default_font_color_label\",\n      require: \"kpi_show_title_label_flag;kpi_attr_font_size_label_type!=option_kpi_font_size_type_number\",\n      type: \"color\"\n    },\n    // 自动粗体斜体\n    {\n      key: \"kpi_default_font_weight_label\",\n      title: \"option_kpi_default_font_weight_label\",\n      require: \"kpi_show_title_label_flag;kpi_attr_font_size_label_type!=option_kpi_font_size_type_number\",\n      type: \"select\",\n      selection: [\"option_font_style_none\", \"option_bold_value\", \"option_italic_value\", \"option_bold_italic_value\"]\n    },\n    // 标签与数值的间距\n    {\n      key: \"kpi_slider_label\",\n      title: \"option_kpi_slider_label\",\n      description: \"option_kpi_slider_label_desc\",\n      type: \"input\",\n      require: \"kpi_show_title_label_flag\",\n      min: 0,\n      max: 300\n    },\n    //恢复默认配置\n    {\n      key: \"chart_config_restart\",\n      type: \"restart\"\n    }]\n  },\n  // 数值配置： 颜色，大小，前缀，后缀，区间配置等\n  {\n    key: \"category_kpi_content_config\",\n    title: \"category_kpi_content_config\",\n    options: [\n    // 显示隐藏\n    {\n      key: \"kpi_show_content_label_flag\",\n      title: \"option_show_hide_text\",\n      type: \"checkbox-prev\",\n      defaultValue: true\n    },\n    // 字体类型类型\n    {\n      key: \"kpi_measure_font_size_label_type\",\n      title: \"option_kpi_attr_font_size_label_type\",\n      type: \"selectTile\",\n      selection: [\"option_kpi_font_size_type_default\", \"option_kpi_font_size_type_number\"],\n      updateFlag: true,\n      require: 'kpi_show_content_label_flag',\n      defaultValue: \"option_kpi_font_size_type_default\"\n    },\n    // 固定数值的配置\n    {\n      key: \"kpi_measure_content_font_style\",\n      title: \"option_kpi_attr_font_style_label\",\n      require: \"kpi_show_content_label_flag;kpi_measure_font_size_label_type=option_kpi_font_size_type_number\",\n      type: \"fontStyle\",\n      defaultValue: {\n        fontSize: 32\n      }\n    },\n    // 自动：大小\n    {\n      key: \"kpi_measure_font_size_label_map\",\n      title: \"option_kpi_attr_font_size_label_map\",\n      type: \"select\",\n      require: 'kpi_show_content_label_flag;kpi_measure_font_size_label_type!=option_kpi_font_size_type_number',\n      selection: [\"option_default_value\", \"option_font_size_Minimum\", \"option_font_size_smaller\", \"option_font_size_bigger\", \"option_font_size_Maximum\", \"option_font_size_super\", \"option_font_size_huge\"]\n    },\n    // 自动颜色\n    {\n      key: \"kpi_measure_default_font_color_label\",\n      title: \"option_kpi_attr_default_font_color_label\",\n      require: \"kpi_show_content_label_flag;kpi_measure_font_size_label_type!=option_kpi_font_size_type_number\",\n      type: \"color\"\n    },\n    // 自动：样式\n    {\n      key: \"kpi_measure_default_font_weight_label\",\n      title: \"option_kpi_default_font_weight_label\",\n      require: \"kpi_show_content_label_flag;kpi_measure_font_size_label_type!=option_kpi_font_size_type_number\",\n      type: \"select\",\n      selection: [\"option_font_style_none\", \"option_bold_value\", \"option_italic_value\", \"option_bold_italic_value\"]\n    },\n    // 数值之间的间隔-------------------------------\n    {\n      key: \"kpi_data_dis_label\",\n      title: \"option_kpi_data_dis_label\",\n      description: \"option_kpi_data_dis_label_desc\",\n      type: \"input\",\n      min: 0,\n      max: 100,\n      unit: 'px',\n      allowNullFlag: true,\n      require: \"kpi_show_content_label_flag\"\n    },\n    // 数值翻牌动画\n    {\n      key: \"kpi_content_value_animation\",\n      title: \"option_kpi_content_value_animation\",\n      type: \"checkbox-prev\",\n      defaultValue: false,\n      require: 'kpi_show_content_label_flag'\n    },\n    // 显示/隐藏背景-----------------------------------------\n    {\n      key: \"kpi_show_content_back_color_flag\",\n      title: \"option_kpi_back_color_label\",\n      type: \"checkbox-prev\",\n      defaultValue: false,\n      require: \"kpi_show_content_label_flag\"\n    },\n    // 数值背景色\n    {\n      key: \"kpi_content_background_color\",\n      title: \"option_kpi_attr_default_font_color_label\",\n      description: \"option_kpi_back_color_label_desc\",\n      type: \"color\",\n      require: \"kpi_show_content_label_flag;kpi_show_content_back_color_flag\"\n    },\n    // 数值背景的圆角\n    {\n      key: \"kpi_back_radius_label\",\n      title: \"option_kpi_back_radius_label\",\n      description: \"option_kpi_back_radius_label_desc\",\n      type: \"input\",\n      min: 0,\n      max: 100,\n      unit: 'px',\n      allowNullFlag: true,\n      require: \"kpi_show_content_label_flag;kpi_show_content_back_color_flag\"\n    },\n    // 数值前缀------------------------------\n    {\n      key: \"kpi_show_content_prefix_label_flag\",\n      title: \"option_kpi_content_prefix_label\",\n      type: \"checkbox-prev\",\n      require: \"kpi_show_content_label_flag\",\n      inheritFlag: false // 主要用于看板中替换模板问答时，标明该配置是不接受模板中配置的标志\n    },\n    // 前缀内容\n    {\n      key: \"kpi_prefix_label_content\",\n      title: \"option_kpi_title_text_label\",\n      type: \"text\",\n      selection: [\"\", \"▲\", \"▼\", \"↑\", \"↓\", \"￥\", \"$\", \"€\", \"€\", \"￡\"],\n      require: 'kpi_show_content_label_flag;kpi_show_content_prefix_label_flag',\n      inheritFlag: false // 主要用于看板中替换模板问答时，标明该配置是不接受模板中配置的标志\n    },\n    // 前缀样式配置\n    {\n      key: \"kpi_prefix_font_type\",\n      title: \"option_kpi_attr_font_size_label_type\",\n      type: \"selectTile\",\n      selection: [\"option_kpi_font_size_type_default\", \"option_kpi_font_size_type_number\"],\n      defaultValueConfig: \"kpi_measure_font_size_label_type\",\n      require: 'kpi_show_content_label_flag;kpi_show_content_prefix_label_flag'\n    },\n    // 前缀样式\n    {\n      key: \"kpi_prefix_font_style\",\n      title: \"option_kpi_attr_font_style_label\",\n      type: \"fontStyle\",\n      defaultValue: {\n        fontSize: 32\n      },\n      defaultValueConfig: \"kpi_measure_content_font_style\",\n      require: 'kpi_show_content_label_flag;kpi_show_content_prefix_label_flag;kpi_prefix_font_type=option_kpi_font_size_type_number'\n    },\n    // 自动前缀字体\n    {\n      key: \"kpi_default_prefix_font_size\",\n      title: \"option_kpi_attr_font_size_label_map\",\n      require: \"kpi_show_content_label_flag;kpi_show_content_prefix_label_flag;kpi_prefix_font_type!=option_kpi_font_size_type_number\",\n      type: \"select\",\n      selection: [\"option_default_value\", \"option_font_size_Minimum\", \"option_font_size_smaller\", \"option_font_size_bigger\", \"option_font_size_Maximum\", \"option_font_size_super\", \"option_font_size_huge\"]\n    },\n    // 自动前缀颜色\n    {\n      key: \"kpi_default_prefix_font_color\",\n      title: \"option_kpi_attr_default_font_color_label\",\n      require: \"kpi_show_content_label_flag;kpi_show_content_prefix_label_flag;kpi_prefix_font_type!=option_kpi_font_size_type_number\",\n      type: \"color\"\n    },\n    // 自动前缀粗体斜体\n    {\n      key: \"kpi_default_prefix_font_weight\",\n      title: \"option_kpi_default_font_weight_label\",\n      require: \"kpi_show_content_label_flag;kpi_show_content_prefix_label_flag;kpi_prefix_font_type!=option_kpi_font_size_type_number\",\n      type: \"select\",\n      selection: [\"option_font_style_none\", \"option_bold_value\", \"option_italic_value\", \"option_bold_italic_value\"]\n    },\n    // 数值后缀---------------------------------\n    {\n      key: \"kpi_show_content_suffix_label_flag\",\n      title: \"option_kpi_content_suffix_label\",\n      type: \"checkbox-prev\",\n      require: \"kpi_show_content_label_flag\"\n    },\n    // 后缀内容\n    {\n      key: \"kpi_suffix_label_content\",\n      title: \"option_kpi_title_text_label\",\n      type: \"text\",\n      selection: [\"\", {\n        lang: \"chinese\",\n        value: \"元\"\n      }, {\n        lang: \"chinese\",\n        value: \"次\"\n      }, {\n        lang: \"chinese\",\n        value: \"件\"\n      }, {\n        lang: \"chinese\",\n        value: \"千克\"\n      }, {\n        lang: \"chinese\",\n        value: \"吨\"\n      }, {\n        lang: \"chinese\",\n        value: \"套\"\n      }, {\n        lang: \"chinese\",\n        value: \"批\"\n      }, {\n        lang: \"chinese\",\n        value: \"箱\"\n      }, {\n        lang: \"chinese\",\n        value: \"升\"\n      }, {\n        lang: \"english\",\n        value: \"freq\"\n      }, {\n        lang: \"english\",\n        value: \"pcs\"\n      }, {\n        lang: \"english\",\n        value: \"kg\"\n      }, {\n        lang: \"english\",\n        value: \"t\"\n      }, {\n        lang: \"english\",\n        value: \"set\"\n      }, {\n        lang: \"english\",\n        value: \"teu\"\n      }, {\n        lang: \"english\",\n        value: \"l\"\n      }],\n      require: 'kpi_show_content_label_flag;kpi_show_content_suffix_label_flag',\n      inheritFlag: false // 主要用于看板中替换模板问答时，标明该配置是不接受模板中配置的标志\n    },\n    // 后缀样式配置\n    {\n      key: \"kpi_suffix_font_type\",\n      title: \"option_kpi_attr_font_size_label_type\",\n      type: \"selectTile\",\n      selection: [\"option_kpi_font_size_type_default\", \"option_kpi_font_size_type_number\"],\n      defaultValueConfig: \"kpi_measure_font_size_label_type\",\n      require: 'kpi_show_content_label_flag;kpi_show_content_suffix_label_flag'\n    },\n    // 后缀样式\n    {\n      key: \"kpi_suffix_font_style\",\n      title: \"option_kpi_attr_font_style_label\",\n      type: \"fontStyle\",\n      defaultValue: {\n        fontSize: 32\n      },\n      require: 'kpi_show_content_label_flag;kpi_show_content_suffix_label_flag;kpi_suffix_font_type=option_kpi_font_size_type_number'\n    },\n    // 自动前缀字体\n    {\n      key: \"kpi_default_suffix_font_size\",\n      title: \"option_kpi_attr_font_size_label_map\",\n      require: \"kpi_show_content_label_flag;kpi_show_content_suffix_label_flag;kpi_suffix_font_type!=option_kpi_font_size_type_number\",\n      type: \"select\",\n      selection: [\"option_default_value\", \"option_font_size_Minimum\", \"option_font_size_smaller\", \"option_font_size_bigger\", \"option_font_size_Maximum\", \"option_font_size_super\", \"option_font_size_huge\"]\n    },\n    // 自动前缀颜色\n    {\n      key: \"kpi_default_suffix_font_color\",\n      title: \"option_kpi_attr_default_font_color_label\",\n      require: \"kpi_show_content_label_flag;kpi_show_content_suffix_label_flag;kpi_suffix_font_type!=option_kpi_font_size_type_number\",\n      type: \"color\"\n    },\n    // 自动前缀粗体斜体\n    {\n      key: \"kpi_default_suffix_font_weight\",\n      title: \"option_kpi_default_font_weight_label\",\n      require: \"kpi_show_content_label_flag;kpi_show_content_suffix_label_flag;kpi_suffix_font_type!=option_kpi_font_size_type_number\",\n      type: \"select\",\n      selection: [\"option_font_style_none\", \"option_bold_value\", \"option_italic_value\", \"option_bold_italic_value\"]\n    },\n    // 数值区间配置字体大小，颜色，样式，前缀，前缀颜色，后缀，后缀颜色\n    // 开启区间配置\n    {\n      key: \"kpi_config_range_flag\",\n      title: \"option_kpi_config_range\",\n      type: \"checkbox-prev\"\n    }, {\n      key: \"kpi_config_range\",\n      type: \"container\",\n      containerClassType: \"borderItem\",\n      options: [{\n        type: \"color\",\n        title: \"option_kpi_range_color\"\n      }, {\n        type: 'container',\n        title: \"option_kpi_content_prefix_label\",\n        options: [{\n          type: \"text\",\n          title: \"option_kpi_range_prefix\",\n          selection: [\"\", \"▲\", \"▼\", \"↑\", \"↓\", \"￥\", \"$\", \"€\", \"€\", \"￡\"]\n        }, {\n          type: \"color\",\n          title: \"option_kpi_range_prefix_color\",\n          position: 'right'\n        }]\n      }, {\n        type: 'container',\n        title: \"option_kpi_content_suffix_label\",\n        options: [{\n          type: \"text\",\n          title: \"option_kpi_range_suffix\",\n          selection: [\"\", {\n            lang: \"chinese\",\n            value: \"元\"\n          }, {\n            lang: \"chinese\",\n            value: \"次\"\n          }, {\n            lang: \"chinese\",\n            value: \"件\"\n          }, {\n            lang: \"chinese\",\n            value: \"千克\"\n          }, {\n            lang: \"chinese\",\n            value: \"吨\"\n          }, {\n            lang: \"chinese\",\n            value: \"套\"\n          }, {\n            lang: \"chinese\",\n            value: \"批\"\n          }, {\n            lang: \"chinese\",\n            value: \"箱\"\n          }, {\n            lang: \"chinese\",\n            value: \"升\"\n          }, {\n            lang: \"english\",\n            value: \"freq\"\n          }, {\n            lang: \"english\",\n            value: \"pcs\"\n          }, {\n            lang: \"english\",\n            value: \"kg\"\n          }, {\n            lang: \"english\",\n            value: \"t\"\n          }, {\n            lang: \"english\",\n            value: \"set\"\n          }, {\n            lang: \"english\",\n            value: \"teu\"\n          }, {\n            lang: \"english\",\n            value: \"l\"\n          }]\n        }, {\n          type: \"color\",\n          title: \"option_kpi_range_suffix_color\",\n          position: 'right'\n        }]\n      }],\n      rangeInits: [{}],\n      require: \"kpi_show_content_label_flag;kpi_config_range_flag\",\n      inheritFlag: false // 主要用于看板中替换模板问答时，标明该配置是不接受模板中配置的标志\n    },\n    //恢复默认配置\n    {\n      key: \"chart_config_restart\",\n      type: \"restart\"\n    }]\n  },\n  // 动态轮播配置\n  {\n    key: \"category_time_config\",\n    title: \"category_time_config\",\n    options: [\n    // 轮播间隔时间 [ KPI / 时序图 / 位置图 ]\n    {\n      key: \"time_title\",\n      title: \"option_time_title_label\",\n      description: \"option_time_title_label_desc\",\n      type: \"input\",\n      min: 0.5,\n      max: 10,\n      defaultNumber: 1,\n      step: 0.5\n    },\n    //恢复默认配置\n    {\n      key: \"chart_config_restart\",\n      type: \"restart\"\n    }],\n    require: \"kpi_carousel_flag\"\n  }],\n  /**\r\n   * 图形配置的辅助对象：适配之前图形配置值的方法 ；[KPI图形没有数据标签及悬浮文本，所以没有宏定义]\r\n   * 当前图形提供的宏列表[ 宏名的命名规则： 开头是%_ 用_连接的大写字符字符串 ]\r\n   * {\r\n   *     [Func]compatibleHistoryConfigure                             适配之前的配置为最新的配置\r\n   * }\r\n   * */\n  chartConfigureAdvanced: {\n    // 如果当前图形配置在上线后需要更新配置，需要兼容行为，则在此处处理[ 不同图形兼容方法不一样 ]\n    /**\r\n     * @param   chartConfigure  -   图表配置对象\r\n     * @param   options\r\n     *          {\r\n     *              tableData   -   当前搜索的数据表详情\r\n     *              yAxisColors     -   202306之前保存的问答的y轴配置的颜色(用户通过图形中的图例列表修改颜色，没有统一到配置中导致需要兼容)\r\n     *              legendColors    -   202306之前保存的问答的图例配置的颜色(用户通过图形中的图例列表修改颜色，没有统一到配置中导致需要兼容)\r\n     *          }\r\n     *\r\n     * 将图形中的操作全部作用到图表配置中\r\n     * */\n    compatibleHistoryConfigure: function (chartConfigure, options) {\n      if (!chartConfigure) return false;\n\n      // @20230731 将之前的负数配置兼容到数值区间中\n      if (chartConfigure.kpi_measure_font_color_minus_label || chartConfigure.kpi_prefix_minus_label) {\n        let theRange = chartConfigure.kpi_config_range || [];\n        theRange.push({\n          min: undefined,\n          max: 0,\n          options: [{\n            title: \"option_kpi_range_color\",\n            value: chartConfigure.kpi_measure_font_color_minus_label\n          }, {\n            title: \"option_kpi_range_prefix\",\n            value: chartConfigure.kpi_prefix_minus_label\n          }]\n        });\n        chartConfigure.kpi_config_range = theRange;\n        delete chartConfigure.kpi_measure_font_color_minus_label;\n        delete chartConfigure.kpi_prefix_minus_label;\n      }\n\n      // 适配@2021年以前配置的正数颜色，负数颜色等配置\n      if (!chartConfigure.kpi_config_range || !chartConfigure.kpi_config_range.length) {\n        let rangeArray = [];\n        if (chartConfigure.kpi_measure_font_color_minus_label || chartConfigure.kpi_prefix_minus_label) {\n          let curop = {\n            min: null,\n            max: 0,\n            options: []\n          };\n          if (chartConfigure.kpi_measure_font_color_minus_label) {\n            curop.options[0] = {};\n            curop.options[0].type = \"color\";\n            curop.options[0].title = \"option_kpi_range_color\";\n            curop.options[0].value = chartConfigure.kpi_measure_font_color_minus_label;\n            delete chartConfigure.kpi_measure_font_color_minus_label;\n          } else {\n            curop.options[0] = {};\n            curop.options[0].type = \"color\";\n            curop.options[0].title = \"option_kpi_range_color\";\n          }\n          if (chartConfigure.kpi_prefix_minus_label) {\n            curop.options[1] = {};\n            curop.options[1].type = \"text\";\n            curop.options[1].title = \"option_kpi_range_prefix\";\n            curop.options[1].value = chartConfigure.kpi_prefix_minus_label;\n            delete chartConfigure.kpi_prefix_minus_label;\n          } else {\n            curop.options[1] = {};\n            curop.options[1].type = \"text\";\n            curop.options[1].title = \"option_kpi_range_prefix\";\n          }\n          if (chartConfigure.kpi_prefix_color_minus_label) {\n            curop.options[2] = {};\n            curop.options[2].type = \"color\";\n            curop.options[2].title = \"option_kpi_range_prefix_color\";\n            curop.options[2].value = chartConfigure.kpi_prefix_color_minus_label;\n            delete chartConfigure.kpi_prefix_color_minus_label;\n          } else {\n            curop.options[2] = {};\n            curop.options[2].type = \"color\";\n            curop.options[2].title = \"option_kpi_range_prefix_color\";\n          }\n          rangeArray.push(curop);\n        }\n        if (chartConfigure.kpi_measure_font_color_label || chartConfigure.kpi_prefix_label) {\n          let curop = {\n            min: 0,\n            max: null,\n            options: []\n          };\n          if (chartConfigure.kpi_measure_font_color_label) {\n            curop.options[0] = {};\n            curop.options[0].type = \"color\";\n            curop.options[0].title = \"option_kpi_range_color\";\n            curop.options[0].value = chartConfigure.kpi_measure_font_color_label;\n            delete chartConfigure.kpi_measure_font_color_label;\n          } else {\n            curop.options[0] = {};\n            curop.options[0].type = \"color\";\n            curop.options[0].title = \"option_kpi_range_color\";\n          }\n          if (chartConfigure.kpi_prefix_label) {\n            curop.options[1] = {};\n            curop.options[1].type = \"text\";\n            curop.options[1].title = \"option_kpi_range_prefix\";\n            curop.options[1].value = chartConfigure.kpi_prefix_label;\n            delete chartConfigure.kpi_prefix_label;\n          } else {\n            curop.options[1] = {};\n            curop.options[1].type = \"text\";\n            curop.options[1].title = \"option_kpi_range_prefix\";\n          }\n          if (chartConfigure.kpi_prefix_color_label) {\n            curop.options[2] = {};\n            curop.options[2].type = \"color\";\n            curop.options[2].title = \"option_kpi_range_prefix_color\";\n            curop.options[2].value = chartConfigure.kpi_prefix_color_label;\n            delete chartConfigure.kpi_prefix_color_label;\n          } else {\n            curop.options[2] = {};\n            curop.options[2].type = \"color\";\n            curop.options[2].title = \"option_kpi_range_prefix_color\";\n          }\n          rangeArray.push(curop);\n        }\n        if (rangeArray.length) chartConfigure.kpi_config_range = rangeArray;\n      }\n      // 增加了区间配置的标志了，如果之前配置了区间的，但是没有区间配置标志，则补全配置\n      if (chartConfigure.kpi_config_range_flag === undefined && chartConfigure.kpi_config_range) {\n        chartConfigure.kpi_config_range_flag = true;\n      }\n\n      // 隐藏标题的配置 调整为显示标题的配置\n      if (chartConfigure.kpi_show_title_label) {\n        chartConfigure.kpi_show_title_label_flag = false;\n        delete chartConfigure.kpi_show_title_label;\n      }\n\n      // 如果没有配置过属性类型，判断当前的 kpi_attr_font_size_label_type 是否为数值\n      // 兼容@2021年之前的kpi_attr_font_size_label配置，kpi_attr_font_size_label 可能是数值\n      if (!chartConfigure.kpi_attr_font_size_label_type) {\n        if (_DataFocusMethod.isPureNumber(chartConfigure.kpi_attr_font_size_label)) {\n          chartConfigure.kpi_attr_font_size_label_type = 'option_kpi_font_size_type_number';\n        } else if (chartConfigure.kpi_attr_font_size_label_map || chartConfigure.kpi_attr_font_size_label) {\n          chartConfigure.kpi_attr_font_size_label_type = 'option_kpi_font_size_type_default';\n          chartConfigure.kpi_attr_font_size_label_map = chartConfigure.kpi_attr_font_size_label_map || chartConfigure.kpi_attr_font_size_label;\n        }\n      }\n      //  @20230731 将之前的标题配置适配为最新的配置\n      if (chartConfigure.kpi_attr_font_size_label_type === 'option_kpi_font_size_type_number' && !chartConfigure.kpi_attr_number_font_style) {\n        chartConfigure.kpi_attr_number_font_style = {\n          fontSize: chartConfigure.kpi_attr_font_size_label,\n          fontColor: chartConfigure.kpi_attr_font_color_label,\n          fontBold: ['option_bold_value', 'option_bold_italic_value'].indexOf(chartConfigure.kpi_font_weight_label) > -1,\n          fontItalic: ['option_italic_value', 'option_bold_italic_value'].indexOf(chartConfigure.kpi_font_weight_label) > -1\n        };\n        delete chartConfigure.kpi_font_weight_label;\n        delete chartConfigure.kpi_attr_font_size_label;\n        delete chartConfigure.kpi_attr_font_color_label;\n        delete chartConfigure.kpi_attr_font_size_label_map;\n      } else {\n        // 字体颜色\n        if (chartConfigure.kpi_attr_font_color_label) {\n          chartConfigure.kpi_attr_default_font_color_label = chartConfigure.kpi_attr_font_color_label;\n          delete chartConfigure.kpi_attr_font_color_label;\n        }\n        // 粗体斜体\n        if (chartConfigure.kpi_font_weight_label) {\n          chartConfigure.kpi_default_font_weight_label = chartConfigure.kpi_font_weight_label;\n          delete chartConfigure.kpi_font_weight_label;\n        }\n      }\n\n      // 隐藏数值的配置，调整为显示标题的配置\n      if (chartConfigure.kpi_hide_content_label) {\n        chartConfigure.kpi_show_content_label_flag = false;\n        delete chartConfigure.kpi_show_content_label_flag;\n      }\n\n      // 将数值字体样式分散的配置转换为一个配置\n      // 兼容@2021年之前的kpi_measure_font_size_label配置，kpi_measure_font_size_label 可能是数值\n      if (!chartConfigure.kpi_measure_font_size_label_type) {\n        if (_DataFocusMethod.isPureNumber(chartConfigure.kpi_measure_font_size_label)) {\n          chartConfigure.kpi_measure_font_size_label_type = 'option_kpi_font_size_type_number';\n        } else if (chartConfigure.kpi_measure_font_size_label_map || chartConfigure.kpi_measure_font_size_label) {\n          chartConfigure.kpi_measure_font_size_label_type = 'option_kpi_font_size_type_default';\n          chartConfigure.kpi_measure_font_size_label_map = chartConfigure.kpi_measure_font_size_label_map || chartConfigure.kpi_measure_font_size_label;\n        }\n      }\n      // @20230731 将之前的配置兼容成当前配置\n      if (chartConfigure.kpi_measure_font_size_label_type === 'option_kpi_font_size_type_number' && !chartConfigure.kpi_measure_content_font_style) {\n        chartConfigure.kpi_measure_content_font_style = {\n          fontSize: chartConfigure.kpi_measure_font_size_label,\n          fontBold: ['option_bold_value', 'option_bold_italic_value'].indexOf(chartConfigure.kpi_measure_font_weight_label) > -1,\n          fontItalic: ['option_italic_value', 'option_bold_italic_value'].indexOf(chartConfigure.kpi_measure_font_weight_label) > -1\n        };\n        delete chartConfigure.kpi_measure_font_size_label;\n        delete chartConfigure.kpi_measure_font_weight_label;\n      } else {\n        // 粗体斜体\n        if (chartConfigure.kpi_measure_font_weight_label) {\n          chartConfigure.kpi_measure_default_font_weight_label = chartConfigure.kpi_measure_font_weight_label;\n          delete chartConfigure.kpi_measure_font_weight_label;\n        }\n      }\n\n      // 增加开启数值背景的开关 ; 调整背景颜色的配置值\n      if (chartConfigure.kpi_back_color_label) {\n        chartConfigure.kpi_show_content_back_color_flag = true;\n        chartConfigure.kpi_content_background_color = chartConfigure.kpi_back_color_label;\n        delete chartConfigure.kpi_back_color_label;\n      }\n\n      // 增加开启前缀的配置值\n      // 兼容@2021年之前的kpi_prefix_font_size_label配置 , 如果没有配置过数值前缀类型 ， 判断当前的 kpi_prefix_font_size_label_type 是否是数值\n      if (!chartConfigure.kpi_prefix_font_size_label_type) {\n        if (_DataFocusMethod.isPureNumber(chartConfigure.kpi_prefix_font_size_label)) {\n          chartConfigure.kpi_prefix_font_size_label_type = 'option_kpi_font_size_type_number';\n        } else if (chartConfigure.kpi_prefix_font_size_label_map || chartConfigure.kpi_prefix_font_size_label) {\n          chartConfigure.kpi_prefix_font_size_label_type = 'option_kpi_font_size_type_default';\n          chartConfigure.kpi_prefix_font_size_label_map = chartConfigure.kpi_prefix_font_size_label_map || chartConfigure.kpi_prefix_font_size_label;\n        }\n      }\n      // @20230731 将之前的前缀配置兼容成当前配置值\n      if (chartConfigure.kpi_show_content_prefix_label_flag === undefined && (_DataFocusMethod.isPureNumber(chartConfigure.kpi_prefix_font_size_label) || chartConfigure.kpi_prefix_label || chartConfigure.kpi_prefix_color_label || chartConfigure.kpi_prefix_font_weight_label || chartConfigure.kpi_prefix_font_size_label_map)) {\n        chartConfigure.kpi_show_content_prefix_label_flag = true;\n        chartConfigure.kpi_prefix_font_type = chartConfigure.kpi_prefix_font_size_label_type;\n        if (chartConfigure.kpi_prefix_font_type === 'option_kpi_font_size_type_number') {\n          if (_DataFocusMethod.isPureNumber(chartConfigure.kpi_prefix_font_size_label)) {\n            chartConfigure.kpi_prefix_font_style = {\n              fontSize: chartConfigure.kpi_prefix_font_size_label,\n              fontColor: chartConfigure.kpi_prefix_color_label,\n              fontBold: ['option_bold_value', 'option_bold_italic_value'].indexOf(chartConfigure.kpi_prefix_font_weight_label) > -1,\n              fontItalic: ['option_italic_value', 'option_bold_italic_value'].indexOf(chartConfigure.kpi_prefix_font_weight_label) > -1\n            };\n          }\n        } else {\n          chartConfigure.kpi_default_prefix_font_color = chartConfigure.kpi_prefix_color_label;\n          chartConfigure.kpi_default_prefix_font_size = chartConfigure.kpi_prefix_font_size_label_map;\n          chartConfigure.kpi_default_prefix_font_weight = chartConfigure.kpi_prefix_font_weight_label;\n        }\n        chartConfigure.kpi_prefix_label_content = chartConfigure.kpi_prefix_label;\n        delete chartConfigure.kpi_prefix_label;\n        delete chartConfigure.kpi_prefix_color_label;\n        delete chartConfigure.kpi_prefix_font_size_label_type;\n        delete chartConfigure.kpi_prefix_font_size_label;\n        delete chartConfigure.kpi_prefix_font_weight_label;\n      }\n\n      // 增加开启后缀的配置值\n      // 兼容@2021年之前的kpi_suffix_font_size_label配置 , 如果没有配置过数值后缀类型 ， 判断当前的 kpi_suffix_font_size_label_type 是否是数值\n      if (!chartConfigure.kpi_suffix_font_size_label_type) {\n        if (_DataFocusMethod.isPureNumber(chartConfigure.kpi_suffix_font_size_label)) {\n          chartConfigure.kpi_suffix_font_size_label_type = 'option_kpi_font_size_type_number';\n        } else {\n          chartConfigure.kpi_suffix_font_size_label_type = 'option_kpi_font_size_type_default';\n          chartConfigure.kpi_suffix_font_size_label_map = chartConfigure.kpi_suffix_font_size_label_map || chartConfigure.kpi_suffix_font_size_label;\n        }\n      }\n      // @20230731 将之前的后缀配置兼容成当前配置值\n      if (chartConfigure.kpi_show_content_suffix_label_flag === undefined && (_DataFocusMethod.isPureNumber(chartConfigure.kpi_suffix_font_size_label) || chartConfigure.kpi_suffix_label || chartConfigure.kpi_suffix_color_label || chartConfigure.kpi_suffix_font_weight_label || chartConfigure.kpi_suffix_font_size_label_map)) {\n        chartConfigure.kpi_show_content_suffix_label_flag = true;\n        chartConfigure.kpi_suffix_font_type = chartConfigure.kpi_suffix_font_size_label_type;\n        if (chartConfigure.kpi_suffix_font_type === 'option_kpi_font_size_type_number') {\n          if (_DataFocusMethod.isPureNumber(chartConfigure.kpi_suffix_font_size_label)) {\n            chartConfigure.kpi_suffix_font_style = {\n              fontSize: chartConfigure.kpi_suffix_font_size_label,\n              fontColor: chartConfigure.kpi_suffix_color_label,\n              fontBold: ['option_bold_value', 'option_bold_italic_value'].indexOf(chartConfigure.kpi_suffix_font_weight_label) > -1,\n              fontItalic: ['option_italic_value', 'option_bold_italic_value'].indexOf(chartConfigure.kpi_suffix_font_weight_label) > -1\n            };\n          }\n        } else {\n          chartConfigure.kpi_default_suffix_font_color = chartConfigure.kpi_suffix_color_label;\n          chartConfigure.kpi_default_suffix_font_size = chartConfigure.kpi_suffix_font_size_label_map;\n          chartConfigure.kpi_default_suffix_font_weight = chartConfigure.kpi_suffix_font_weight_label;\n        }\n        chartConfigure.kpi_suffix_label_content = chartConfigure.kpi_suffix_label;\n        delete chartConfigure.kpi_suffix_label;\n        delete chartConfigure.kpi_suffix_color_label;\n        delete chartConfigure.kpi_suffix_font_size_label_type;\n        delete chartConfigure.kpi_suffix_font_size_label;\n        delete chartConfigure.kpi_suffix_font_weight_label;\n      }\n\n      // @20240327 将翻牌器图形的动画时间配置兼容到动画标志\n      if (chartConfigure.animation_translate_time) {\n        chartConfigure.kpi_content_value_animation = true;\n        delete chartConfigure.animation_translate_time;\n      }\n    }\n  },\n  // [*必填项]图轴及图表自定义的中英文\n  i18nObj: {\n    chinese: {\n      \"system_auto_default\": \"自动\",\n      \"user_define_text\": \"自定义\",\n      \"option_kpi_content_alignment\": \"对齐方式\",\n      \"kpi_content_alignment_left\": \"左对齐\",\n      \"kpi_content_alignment_right\": \"右对齐\",\n      \"kpi_content_alignment_center\": \"居中\",\n      \"option_kpi_content_font_family\": \"字体\",\n      \"option_kpi_content_value_animation\": \"数值翻牌动画\",\n      \"category_kpi_title_config\": \"类别标签\",\n      \"option_show_hide_text\": \"显示/隐藏\",\n      \"option_kpi_positionType_label\": \"位置\",\n      \"option_kpi_position_top\": \"上\",\n      \"option_kpi_position_left\": \"左\",\n      \"option_kpi_position_bottom\": \"下\",\n      \"option_kpi_title_text_label\": \"内容\",\n      \"option_kpi_title_text_label_placeholder\": \"默认为列名\",\n      \"option_kpi_attr_font_size_label_type\": \"字体类型\",\n      \"option_kpi_attr_font_size_label_type_desc\": \"选择字体配置类型 ：<br />\" + \"自动适配：字体大小依据画图区域宽高按比例自适应字体大小； <br />\" + \"固定数值：字体大小由用户配置固定的数值 ；\",\n      \"option_kpi_font_size_type_default\": \"自动适配\",\n      \"option_kpi_font_size_type_number\": \"固定数值\",\n      \"option_kpi_attr_font_style_label\": \"字体\",\n      \"option_kpi_attr_font_size_label_map\": \"大小\",\n      \"option_kpi_attr_default_font_color_label\": \"颜色\",\n      \"option_kpi_default_font_weight_label\": \"样式\",\n      \"option_font_style_none\": \"默认(无)\",\n      \"category_kpi_content_config\": \"数值\",\n      \"option_kpi_data_dis_label\": \"数值间隔\",\n      \"option_kpi_data_dis_label_desc\": \"设置数值部分每个数字之间的距离 ( 0 ~ 100)\",\n      \"option_kpi_content_prefix_label\": \"前缀\",\n      \"option_kpi_content_suffix_label\": \"后缀\",\n      \"option_kpi_range_color\": \"数值颜色\",\n      \"option_kpi_range_prefix\": \"前缀内容\",\n      \"option_kpi_range_prefix_color\": \"前缀颜色\",\n      \"option_kpi_range_suffix\": \"后缀内容\",\n      \"option_kpi_range_suffix_color\": \"后缀颜色\"\n    },\n    english: {\n      \"system_auto_default\": \"Auto\",\n      \"user_define_text\": \"Define\",\n      \"option_kpi_content_alignment\": \"Alignment\",\n      \"kpi_content_alignment_left\": \"Left\",\n      \"kpi_content_alignment_right\": \"Right\",\n      \"kpi_content_alignment_center\": \"Center\",\n      \"option_kpi_content_font_family\": \"Font Family\",\n      \"category_kpi_title_config\": \"Label\",\n      \"option_show_hide_text\": \"Show/Hide\",\n      \"option_kpi_positionType_label\": \"Position\",\n      \"option_kpi_position_top\": \"Top\",\n      \"option_kpi_position_left\": \"Left\",\n      \"option_kpi_position_bottom\": \"Bottom\",\n      \"option_kpi_title_text_label\": \"Content\",\n      \"option_kpi_title_text_label_placeholder\": \"Default is column name\",\n      \"option_kpi_attr_font_size_label_type\": \"Font Type\",\n      \"option_kpi_attr_font_size_label_type_desc\": \"Select font configuration type : <br />\" + \"Automatic adaptation: The font size is adaptive based on the width and height of the drawing area;<br />\" + \"Fixed value: The font size is a fixed value configured by the user;\",\n      \"option_kpi_font_size_type_default\": \"Automatic adaptation\",\n      \"option_kpi_font_size_type_number\": \"Fixed value\",\n      \"option_kpi_attr_font_style_label\": \"Font\",\n      \"option_kpi_attr_font_size_label_map\": \"Size\",\n      \"option_kpi_attr_default_font_color_label\": \"Color\",\n      \"option_kpi_default_font_weight_label\": \"Style\",\n      \"option_font_style_none\": \"Default(None)\",\n      \"category_kpi_content_config\": \"Value\",\n      \"option_kpi_data_dis_label\": \"Spacing\",\n      \"option_kpi_data_dis_label_desc\": \"Set the distance between each number in the numerical section ( 0 ~ 100)\",\n      \"option_kpi_content_prefix_label\": \"Prefix\",\n      \"option_kpi_content_suffix_label\": \"Suffix\",\n      \"option_kpi_range_color\": \"Value Color\",\n      \"option_kpi_range_prefix\": \"Prefix Content\",\n      \"option_kpi_range_prefix_color\": \"Prefix Color\",\n      \"option_kpi_range_suffix\": \"Suffix Content\",\n      \"option_kpi_range_suffix_color\": \"Suffix Color\"\n    }\n  },\n  // [*必填项]生成当前图表类型的模板数据\n  getTemplateData: function () {}\n});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ \"../node_modules/jquery/dist/jquery.js\")))\n\n//# sourceURL=webpack:///../src-v5/assets/js/charts.system.basic/kpi/systemKpiChart.js?");

/***/ })

}]);